{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/home/isg-05/Escritorio/Genesis/genesis/components/Components_SingOut.tsx\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { View } from \"./Themed\";\nimport { Auth } from 'aws-amplify';\nexport default function Components_SingOut(_ref) {\n  var onChangeSingOut = _ref.onChangeSingOut;\n\n  var _React$useState = React.useState(true),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      valitador = _React$useState2[0],\n      onChangeValidator = _React$useState2[1];\n\n  return React.createElement(View, {\n    style: {\n      paddingTop: 50\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 9\n    }\n  }, React.createElement(Button, {\n    onPress: signOut(onChangeSingOut, onChangeValidator, valitador),\n    title: \"Sing Out of the chat\",\n    color: \"#ff9900\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 13\n    }\n  }));\n}\n\nfunction signOut(onChangeSingOut, onChangeValidator, validator) {\n  return _regeneratorRuntime.async(function signOut$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          try {\n            Auth.signOut({\n              global: true\n            });\n\n            if (validator) {\n              onChangeSingOut(true);\n              onChangeValidator(false);\n            }\n          } catch (error) {\n            console.log('error signing out: ', error);\n          }\n\n        case 1:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\n\nvar styles = StyleSheet.create({});","map":{"version":3,"sources":["/home/isg-05/Escritorio/Genesis/genesis/components/Components_SingOut.tsx"],"names":["React","View","Auth","Components_SingOut","onChangeSingOut","useState","valitador","onChangeValidator","paddingTop","signOut","validator","global","error","console","log","styles","StyleSheet","create"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;AAGA,SAASC,IAAT;AAEA,SAASC,IAAT,QAAqB,aAArB;AAEA,eAAe,SAASC,kBAAT,OAA2E;AAAA,MAA7CC,eAA6C,QAA7CA,eAA6C;;AACtF,wBAAuCJ,KAAK,CAACK,QAAN,CAAe,IAAf,CAAvC;AAAA;AAAA,MAAOC,SAAP;AAAA,MAAkBC,iBAAlB;;AACA,SACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAACC,MAAAA,UAAU,EAAE;AAAb,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,MAAD;AACI,IAAA,OAAO,EAAEC,OAAO,CAACL,eAAD,EAAkBG,iBAAlB,EAAqCD,SAArC,CADpB;AAEI,IAAA,KAAK,EAAC,sBAFV;AAGI,IAAA,KAAK,EAAC,SAHV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ;AAYH;;AAED,SAAeG,OAAf,CAAuBL,eAAvB,EAA8CG,iBAA9C,EAAsEG,SAAtE;AAAA;AAAA;AAAA;AAAA;AACI,cAAI;AACDR,YAAAA,IAAI,CAACO,OAAL,CAAa;AAAEE,cAAAA,MAAM,EAAE;AAAV,aAAb;;AACA,gBAAGD,SAAH,EAAa;AACZN,cAAAA,eAAe,CAAC,IAAD,CAAf;AACAG,cAAAA,iBAAiB,CAAC,KAAD,CAAjB;AACA;AACH,WAND,CAME,OAAOK,KAAP,EAAc;AACZC,YAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmCF,KAAnC;AACH;;AATL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAaA,IAAMG,MAAM,GAAGC,UAAU,CAACC,MAAX,CAAkB,EAAlB,CAAf","sourcesContent":["import React from 'react';\nimport { StyleSheet, Button } from 'react-native';\n\nimport { View } from './Themed';\n\nimport { Auth } from 'aws-amplify';\n\nexport default function Components_SingOut({ onChangeSingOut }: { onChangeSingOut: any }) {\n    const [valitador, onChangeValidator] = React.useState(true);\n    return (\n        <View style={{paddingTop: 50}}>\n            <Button\n                onPress={signOut(onChangeSingOut, onChangeValidator, valitador)}\n                title=\"Sing Out of the chat\"\n                color=\"#ff9900\"\n            />\n            {/* <View>\n                <Components_Chat path=\"/screens/Components_Login.tsx\" />\n            </View> */}\n        </View>\n    );\n}\n\nasync function signOut(onChangeSingOut : any, onChangeValidator: any, validator: boolean) {\n    try {\n       Auth.signOut({ global: true });\n       if(validator){\n        onChangeSingOut(true)\n        onChangeValidator(false)\n       }\n    } catch (error) {\n        console.log('error signing out: ', error);\n    }\n}\n\n\nconst styles = StyleSheet.create({\n\n});\n"]},"metadata":{},"sourceType":"module"}