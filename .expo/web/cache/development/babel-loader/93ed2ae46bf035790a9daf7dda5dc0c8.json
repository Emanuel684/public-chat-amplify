{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/home/isg-05/Escritorio/Genesis/genesis/components/Components_Login.tsx\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { API, graphqlOperation } from 'aws-amplify';\nimport { onCreateMessage } from \"../src/graphql/subscriptions\";\nimport { createMessage } from \"../src/graphql/mutations\";\nimport { Authenticator, SignIn } from 'aws-amplify-react-native';\n\nfunction Components_Login(_ref) {\n  var path = _ref.path;\n\n  var _React$useState = React.useState(''),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      message = _React$useState2[0],\n      onChangeMessage = _React$useState2[1];\n\n  var subscription = API.graphql(graphqlOperation(onCreateMessage)).subscribe({\n    next: function next(todoData) {\n      console.log(\"todoData\", todoData);\n    }\n  });\n  return React.createElement(Authenticator, {\n    hideDefault: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 5\n    }\n  }, React.createElement(SignIn, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 3\n    }\n  }));\n}\n\nfunction sendMessage(message) {\n  var send_message;\n  return _regeneratorRuntime.async(function sendMessage$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          console.log(\"This is the message: \" + message);\n          send_message = {\n            username: \"Emanuel\",\n            message: message\n          };\n          console.log(\"Se ejecuto la funcion de crear mensaje\");\n          _context.next = 5;\n          return _regeneratorRuntime.awrap(API.graphql(graphqlOperation(createMessage, {\n            input: send_message\n          })));\n\n        case 5:\n          return _context.abrupt(\"return\", _context.sent);\n\n        case 6:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\n\nvar styles = StyleSheet.create({\n  title: {\n    fontSize: 30,\n    fontWeight: 'bold',\n    textAlign: 'center',\n    paddingTop: 60,\n    paddingBottom: 20\n  },\n  input: {\n    height: 80,\n    margin: 12,\n    borderWidth: 2,\n    padding: 10,\n    borderColor: '#ffe6bf',\n    borderRadius: 10\n  },\n  buttonText: {\n    fontSize: 24,\n    fontWeight: \"bold\",\n    color: \"#FFFFFF\"\n  },\n  button: {\n    backgroundColor: '#33AAFF',\n    borderWidth: 10,\n    borderRadius: 20,\n    borderColor: \"#33AAFF\",\n    padding: 5\n  }\n});\nexport default Components_Login;","map":{"version":3,"sources":["/home/isg-05/Escritorio/Genesis/genesis/components/Components_Login.tsx"],"names":["React","API","graphqlOperation","onCreateMessage","createMessage","Authenticator","SignIn","Components_Login","path","useState","message","onChangeMessage","subscription","graphql","subscribe","next","todoData","console","log","sendMessage","send_message","username","input","styles","StyleSheet","create","title","fontSize","fontWeight","textAlign","paddingTop","paddingBottom","height","margin","borderWidth","padding","borderColor","borderRadius","buttonText","color","button","backgroundColor"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAWA,SAASC,GAAT,EAAcC,gBAAd,QAAsC,aAAtC;AACA,SAASC,eAAT;AACA,SAASC,aAAT;AAGA,SAASC,aAAT,EAAwBC,MAAxB,QAAsC,0BAAtC;;AAEA,SAASC,gBAAT,OAAsD;AAAA,MAA1BC,IAA0B,QAA1BA,IAA0B;;AAEpD,wBAAmCR,KAAK,CAACS,QAAN,CAAe,EAAf,CAAnC;AAAA;AAAA,MAAOC,OAAP;AAAA,MAAgBC,eAAhB;;AAGA,MAAMC,YAAY,GAAGX,GAAG,CAACY,OAAJ,CACnBX,gBAAgB,CAACC,eAAD,CADG,EAEnBW,SAFmB,CAET;AACVC,IAAAA,IAAI,EAAE,cAACC,QAAD,EAAmB;AACvBC,MAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAuBF,QAAvB;AAED;AAJS,GAFS,CAArB;AAYA,SAqBE,oBAAC,aAAD;AAAe,IAAA,WAAW,EAAE,IAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACF,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADE,CArBF;AAyBD;;AAED,SAAeG,WAAf,CAA2BT,OAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AACEO,UAAAA,OAAO,CAACC,GAAR,2BAAoCR,OAApC;AACMU,UAAAA,YAFR,GAEuB;AACnBC,YAAAA,QAAQ,EAAE,SADS;AAEnBX,YAAAA,OAAO,EAAEA;AAFU,WAFvB;AAMAO,UAAAA,OAAO,CAACC,GAAR,CAAY,wCAAZ;AANA;AAAA,2CAOajB,GAAG,CAACY,OAAJ,CAAYX,gBAAgB,CAACE,aAAD,EAAgB;AAAEkB,YAAAA,KAAK,EAAEF;AAAT,WAAhB,CAA5B,CAPb;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAYA,IAAMG,MAAM,GAAGC,UAAU,CAACC,MAAX,CAAkB;AAC/BC,EAAAA,KAAK,EAAE;AACLC,IAAAA,QAAQ,EAAE,EADL;AAELC,IAAAA,UAAU,EAAE,MAFP;AAGLC,IAAAA,SAAS,EAAE,QAHN;AAILC,IAAAA,UAAU,EAAE,EAJP;AAKLC,IAAAA,aAAa,EAAE;AALV,GADwB;AAQ/BT,EAAAA,KAAK,EAAE;AACLU,IAAAA,MAAM,EAAE,EADH;AAELC,IAAAA,MAAM,EAAE,EAFH;AAGLC,IAAAA,WAAW,EAAE,CAHR;AAILC,IAAAA,OAAO,EAAE,EAJJ;AAKLC,IAAAA,WAAW,EAAE,SALR;AAMLC,IAAAA,YAAY,EAAE;AANT,GARwB;AAgB/BC,EAAAA,UAAU,EAAE;AACVX,IAAAA,QAAQ,EAAE,EADA;AAEVC,IAAAA,UAAU,EAAE,MAFF;AAGVW,IAAAA,KAAK,EAAE;AAHG,GAhBmB;AAqB/BC,EAAAA,MAAM,EAAE;AACNC,IAAAA,eAAe,EAAE,SADX;AAENP,IAAAA,WAAW,EAAE,EAFP;AAGNG,IAAAA,YAAY,EAAE,EAHR;AAIND,IAAAA,WAAW,EAAE,SAJP;AAKND,IAAAA,OAAO,EAAE;AALH;AArBuB,CAAlB,CAAf;AA+BA,eAAe5B,gBAAf","sourcesContent":["import React from 'react';\nimport { StyleSheet, SafeAreaView, TextInput, Button } from 'react-native';\n\nimport { Text, View } from './Themed';\n\nimport { withAuthenticator } from 'aws-amplify-react-native';\n\n\nimport Components_SingOut from './Components_SingOut';\n\n// This is the part for the suscription \nimport { API, graphqlOperation } from 'aws-amplify';\nimport { onCreateMessage } from '../src/graphql/subscriptions';\nimport { createMessage } from \"../src/graphql/mutations\";\nimport { listMessages } from \"../src/graphql/queries\";\n\nimport { Authenticator, SignIn } from 'aws-amplify-react-native';\n\nfunction Components_Login({ path }: { path: string }) {\n\n  const [message, onChangeMessage] = React.useState('');\n\n  // Subscribe to creation of Todo\n  const subscription = API.graphql(\n    graphqlOperation(onCreateMessage)\n  ).subscribe({\n    next: (todoData: any) => {\n      console.log(\"todoData\",todoData);\n      // Do something with the data\n    }\n  });\n\n  // // Stop receiving data updates from the subscription\n  // subscription.unsubscribe();\n\n  return (\n    // <View>\n    //   <Components_SingOut path=\"/screens/Components_Login.tsx\" />\n    //   <SafeAreaView>\n    //     <Text style={styles.title}>Message</Text>\n    //     <View style={{ width: 250 }}>\n    //       <TextInput\n    //         multiline={true}\n    //         numberOfLines={20}\n    //         maxLength={300}\n    //         style={styles.input}\n    //         onChangeText={Text => onChangeMessage(Text)}\n    //         placeholder=\"Message\"\n    //       />\n    //     </View>\n    //     <Button\n    //       onPress={() => sendMessage(message)}\n    //       title=\"Send message\"\n    //       color=\"#ff9900\" />\n    //   </SafeAreaView>\n    // </View>\n    <Authenticator hideDefault={true}>\n  <SignIn />\n</Authenticator>\n  );\n}\n\nasync function sendMessage(message:string) {\n  console.log(`This is the message: ${message}`)\n  const send_message = {\n    username: \"Emanuel\",\n    message: message,\n};\nconsole.log(\"Se ejecuto la funcion de crear mensaje\")\nreturn await API.graphql(graphqlOperation(createMessage, { input: send_message }));\n}\n\n\n\nconst styles = StyleSheet.create({\n  title: {\n    fontSize: 30,\n    fontWeight: 'bold',\n    textAlign: 'center',\n    paddingTop: 60,\n    paddingBottom: 20,\n  },\n  input: {\n    height: 80,\n    margin: 12,\n    borderWidth: 2,\n    padding: 10,\n    borderColor: '#ffe6bf',\n    borderRadius: 10,\n  },\n  buttonText: {\n    fontSize: 24,\n    fontWeight: \"bold\",\n    color: \"#FFFFFF\"\n  },\n  button: {\n    backgroundColor: '#33AAFF',\n    borderWidth: 10,\n    borderRadius: 20,\n    borderColor: \"#33AAFF\",\n    padding: 5,\n  }\n});\n\n\nexport default Components_Login;"]},"metadata":{},"sourceType":"module"}