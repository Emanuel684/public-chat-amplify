{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/home/isg-05/Escritorio/Genesis/genesis/components/Components_Chat.tsx\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { Text, View } from \"./Themed\";\nimport { API, graphqlOperation, Auth } from 'aws-amplify';\nimport { onCreateMessage } from \"../src/graphql/subscriptions\";\nimport { listMessages } from \"../src/graphql/queries\";\nimport { useEffect } from 'react';\nexport default function Components_Chat(_ref) {\n  var _this = this;\n\n  var path = _ref.path;\n\n  var _React$useState = React.useState([]),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      data_message = _React$useState2[0],\n      onChangeDataMessage = _React$useState2[1];\n\n  var _React$useState3 = React.useState(Auth.currentAuthenticatedUser().then(function (a) {\n    return a.username;\n  })),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      usernamelogin = _React$useState4[0],\n      onChangeUsernameLogin = _React$useState4[1];\n\n  useEffect(function () {\n    var subscription = API.graphql(graphqlOperation(onCreateMessage)).subscribe({\n      next: function next(todoData) {\n        console.log(\"todoData\", todoData.value.data.onCreateMessage);\n        onChangeDataMessage(Array.from(data_message).concat(todoData.value.data.onCreateMessage));\n        console.log(\"Array after\", data_message);\n      }\n    });\n    getData();\n  }, []);\n\n  function getData() {\n    return _regeneratorRuntime.async(function getData$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            API.graphql(graphqlOperation(listMessages)).then(function (evt) {\n              console.log(\"evt.data.listMessages.items\", evt.data.listMessages.items);\n              return onChangeDataMessage(evt.data.listMessages.items);\n            });\n\n          case 1:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  return React.createElement(View, {\n    style: {\n      width: '95%',\n      height: 500\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    style: styles.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }, \"Chat online\"), React.createElement(ScrollView, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }, data_message.map(function (todo, i) {\n    console.log(\"data_message in VIEW\", data_message);\n    Auth.currentAuthenticatedUser().then(function (a) {\n      return onChangeUsernameLogin(a.username);\n    });\n\n    if (todo.username == usernamelogin) {\n      return React.createElement(View, {\n        style: styles.container_message_principal,\n        key: todo.id,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 17\n        }\n      }, React.createElement(View, {\n        style: styles.card_message_principaluser,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 19\n        }\n      }, React.createElement(Text, {\n        style: styles.username,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }\n      }, todo.username), React.createElement(Text, {\n        style: styles.message_text,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }\n      }, todo.message)));\n    } else if (todo.username != usernamelogin) {\n      return React.createElement(View, {\n        style: styles.container_message_second,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 17\n        }\n      }, React.createElement(View, {\n        style: styles.card_message_seconduser,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 19\n        }\n      }, React.createElement(Text, {\n        style: styles.username,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 21\n        }\n      }, todo.username), React.createElement(Text, {\n        style: styles.message_text,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }\n      }, todo.message)));\n    }\n  })));\n}\nvar styles = StyleSheet.create({\n  title: {\n    fontSize: 30,\n    fontWeight: 'bold',\n    backgroundColor: '#ff9900',\n    borderRadius: 10,\n    textAlign: 'center'\n  },\n  card_message_principaluser: {\n    backgroundColor: '#ff9900',\n    borderRadius: 10,\n    padding: 10,\n    borderWidth: 2,\n    borderColor: '#ffb445'\n  },\n  message_text: {\n    fontSize: 18\n  },\n  username: {\n    fontSize: 13,\n    fontWeight: 'bold'\n  },\n  container_message_principal: {\n    backgroundColor: '#fff4e3',\n    alignItems: 'flex-end',\n    justifyContent: 'flex-end',\n    paddingTop: 10,\n    paddingEnd: 10\n  },\n  container_message_second: {\n    backgroundColor: '#fff4e3',\n    alignItems: 'flex-start',\n    justifyContent: 'flex-end',\n    paddingStart: 10,\n    paddingBottom: 10,\n    paddingTop: 10\n  },\n  card_message_seconduser: {\n    backgroundColor: '#ffcc82',\n    borderRadius: 10,\n    padding: 10\n  }\n});","map":{"version":3,"sources":["/home/isg-05/Escritorio/Genesis/genesis/components/Components_Chat.tsx"],"names":["React","Text","View","API","graphqlOperation","Auth","onCreateMessage","listMessages","useEffect","Components_Chat","path","useState","data_message","onChangeDataMessage","currentAuthenticatedUser","then","a","username","usernamelogin","onChangeUsernameLogin","subscription","graphql","subscribe","next","todoData","console","log","value","data","Array","from","concat","getData","evt","items","width","height","styles","title","map","todo","i","container_message_principal","id","card_message_principaluser","message_text","message","container_message_second","card_message_seconduser","StyleSheet","create","fontSize","fontWeight","backgroundColor","borderRadius","textAlign","padding","borderWidth","borderColor","alignItems","justifyContent","paddingTop","paddingEnd","paddingStart","paddingBottom"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { StyleSheet, ScrollView } from 'react-native';\n\nimport { Text, View } from './Themed';\n\n// This is the part for the suscription \nimport { API, graphqlOperation, Auth } from 'aws-amplify';\nimport { onCreateMessage } from '../src/graphql/subscriptions';\nimport { createMessage } from \"../src/graphql/mutations\";\nimport { listMessages } from \"../src/graphql/queries\";\n\nimport { useEffect } from 'react';\n\n\nexport default function Components_Chat({ path }: { path: string }) {\n\n  const [data_message, onChangeDataMessage] = React.useState([]);\n\n  const [usernamelogin, onChangeUsernameLogin] = React.useState(Auth.currentAuthenticatedUser().then((a) => a.username));\n\n  useEffect(() => {\n    // let subscription;\n\n    // (async () => {\n    //   subscription = client.subscribe({ query: gql(onCreateMessage) }).subscribe({\n    //     next: data => {\n    //       console.log(data.data.onCreateMessage);\n    //     },\n    //     error: error => {\n    //       console.warn(error);\n    //     }\n    //   });\n    // })();\n\n    const subscription = API.graphql(\n      graphqlOperation(onCreateMessage)\n    ).subscribe({\n      next: (todoData: any) => {\n        console.log(\"todoData\", todoData.value.data.onCreateMessage);\n        onChangeDataMessage(Array.from(data_message).concat(todoData.value.data.onCreateMessage))\n        console.log(\"Array after\", data_message);\n      }\n    });\n\n    getData();\n\n  }, [])\n\n  async function getData() {\n    API.graphql(graphqlOperation(listMessages)).then((evt: any) => {\n      console.log(\"evt.data.listMessages.items\", evt.data.listMessages.items);\n      return (onChangeDataMessage(evt.data.listMessages.items));\n    });\n  }\n\n\n  return (\n    <View style={{ width: '95%', height: 500 }}>\n      <Text style={styles.title}>Chat online</Text>\n      <ScrollView>\n        {\n          data_message.map((todo: any, i: any) => {\n            console.log(\"data_message in VIEW\", data_message)\n            Auth.currentAuthenticatedUser().then((a) => onChangeUsernameLogin(a.username));\n            if (todo.username == usernamelogin) {\n              return (\n                <View style={styles.container_message_principal} key={todo.id}>\n                  <View style={styles.card_message_principaluser}>\n                    <Text style={styles.username}>{todo.username}</Text>\n                    <Text style={styles.message_text}>{todo.message}</Text>\n                  </View>\n                </View>\n              )\n            } else if (todo.username != usernamelogin) {\n              return (\n                <View style={styles.container_message_second}>\n                  <View style={styles.card_message_seconduser}>\n                    <Text style={styles.username}>{todo.username}</Text>\n                    <Text style={styles.message_text}>{todo.message}</Text>\n                  </View>\n                </View>\n              )\n            }\n          })\n        }\n      </ScrollView>\n    </View>\n  );\n\n\n}\n\n\nconst styles = StyleSheet.create({\n  title: {\n    fontSize: 30,\n    fontWeight: 'bold',\n    backgroundColor: '#ff9900',\n    borderRadius: 10,\n    textAlign: 'center',\n  },\n  card_message_principaluser: {\n    backgroundColor: '#ff9900',\n    borderRadius: 10,\n    padding: 10,\n    borderWidth: 2,\n    borderColor: '#ffb445',\n  },\n  message_text: {\n    fontSize: 18,\n  },\n  username: {\n    fontSize: 13,\n    fontWeight: 'bold',\n  },\n  container_message_principal: {\n    backgroundColor: '#fff4e3',\n    alignItems: 'flex-end',\n    justifyContent: 'flex-end',\n    paddingTop: 10,\n    paddingEnd: 10,\n  },\n  container_message_second: {\n    backgroundColor: '#fff4e3',\n    alignItems: 'flex-start',\n    justifyContent: 'flex-end',\n    paddingStart: 10,\n    paddingBottom: 10,\n    paddingTop: 10,\n  },\n  card_message_seconduser: {\n    backgroundColor: '#ffcc82',\n    borderRadius: 10,\n    padding: 10,\n  },\n});\n"]},"metadata":{},"sourceType":"module"}