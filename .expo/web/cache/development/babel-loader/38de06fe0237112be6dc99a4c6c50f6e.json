{"ast":null,"code":"import { applyMiddleware, createStore } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { persistStore, persistReducer } from 'redux-persist';\nimport AsyncStorage from '@react-native-community/async-storage';\nimport hardSet from 'redux-persist/lib/stateReconciler/hardSet';\nimport { rootReducer } from \"./reducers\";\nimport rootSaga from \"./sagas\";\nvar persistConfig = {\n  key: 'root',\n  storage: AsyncStorage,\n  whitelist: ['authUser'],\n  blacklist: [],\n  stateReconciler: hardSet\n};\nvar persistedReducer = persistReducer(persistConfig, rootReducer);\n\nvar configureStore = function configureStore(initialState) {\n  var sagaMiddleware = createSagaMiddleware();\n  var enhancer = composeWithDevTools(applyMiddleware(sagaMiddleware));\n  var store = createStore(persistedReducer, initialState, enhancer);\n  sagaMiddleware.run(rootSaga);\n\n  if (module.hot) {\n    module.hot.accept('./reducers', function () {\n      var nextRootReducer = require(\"./reducers\").rootReducer;\n\n      store.replaceReducer(nextRootReducer);\n    });\n  }\n\n  return store;\n};\n\nexport var store = configureStore();\nexport var persistor = persistStore(store);","map":{"version":3,"sources":["/home/isg-05/Escritorio/Genesis/genesis/src/redux/store.ts"],"names":["applyMiddleware","createStore","createSagaMiddleware","composeWithDevTools","persistStore","persistReducer","AsyncStorage","hardSet","rootReducer","rootSaga","persistConfig","key","storage","whitelist","blacklist","stateReconciler","persistedReducer","configureStore","initialState","sagaMiddleware","enhancer","store","run","module","hot","accept","nextRootReducer","require","replaceReducer","persistor"],"mappings":"AAAA,SAASA,eAAT,EAA0BC,WAA1B,QAAoD,OAApD;AACA,OAAOC,oBAAP,MAAiC,YAAjC;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SAASC,YAAT,EAAuBC,cAAvB,QAA6C,eAA7C;AACA,OAAOC,YAAP,MAAyB,uCAAzB;AACA,OAAOC,OAAP,MAAoB,2CAApB;AACA,SAASC,WAAT;AACA,OAAOC,QAAP;AAEA,IAAMC,aAAkB,GAAG;AAGzBC,EAAAA,GAAG,EAAE,MAHoB;AAKzBC,EAAAA,OAAO,EAAEN,YALgB;AAOzBO,EAAAA,SAAS,EAAE,CAAC,UAAD,CAPc;AASzBC,EAAAA,SAAS,EAAE,EATc;AAUzBC,EAAAA,eAAe,EAAER;AAVQ,CAA3B;AAcA,IAAMS,gBAAgB,GAAGX,cAAc,CAACK,aAAD,EAAgBF,WAAhB,CAAvC;;AAEA,IAAMS,cAAc,GAAG,SAAjBA,cAAiB,CACrBC,YADqB,EAEY;AACjC,MAAMC,cAAc,GAAGjB,oBAAoB,EAA3C;AACA,MAAMkB,QAAQ,GAAGjB,mBAAmB,CAACH,eAAe,CAACmB,cAAD,CAAhB,CAApC;AAEA,MAAME,KAAK,GAAGpB,WAAW,CAACe,gBAAD,EAAmBE,YAAnB,EAAiCE,QAAjC,CAAzB;AAEAD,EAAAA,cAAc,CAACG,GAAf,CAAmBb,QAAnB;;AAEA,MAAIc,MAAM,CAACC,GAAX,EAAgB;AACdD,IAAAA,MAAM,CAACC,GAAP,CAAWC,MAAX,CAAkB,YAAlB,EAAgC,YAAM;AACpC,UAAMC,eAAe,GAAGC,OAAO,cAAP,CAAsBnB,WAA9C;;AACAa,MAAAA,KAAK,CAACO,cAAN,CAAqBF,eAArB;AACD,KAHD;AAID;;AAED,SAAOL,KAAP;AACD,CAlBD;;AAoBA,OAAO,IAAMA,KAAK,GAAGJ,cAAc,EAA5B;AAGP,OAAO,IAAMY,SAAS,GAAGzB,YAAY,CAACiB,KAAD,CAA9B","sourcesContent":["import { applyMiddleware, createStore, Store } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { persistStore, persistReducer } from 'redux-persist';\nimport AsyncStorage from '@react-native-community/async-storage';\nimport hardSet from 'redux-persist/lib/stateReconciler/hardSet';\nimport { rootReducer, RootState } from './reducers';\nimport rootSaga from './sagas'\n// Middleware: Redux Persist Config\nconst persistConfig: any = {\n  // eslint-disable-line\n  // Root\n  key: 'root',\n  // Storage Method (React Native)\n  storage: AsyncStorage,\n  // Whitelist (Save Specific Reducers)\n  whitelist: ['authUser'],\n  // Blacklist (Don't Save Specific Reducers)\n  blacklist: [],\n  stateReconciler: hardSet,\n};\n\n// Middleware: Redux Persist Persisted Reducer\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\n\nconst configureStore = (\n  initialState?: RootState\n): Store<RootState | undefined> => {\n  const sagaMiddleware = createSagaMiddleware();\n  const enhancer = composeWithDevTools(applyMiddleware(sagaMiddleware));\n\n  const store = createStore(persistedReducer, initialState, enhancer);\n\n  sagaMiddleware.run(rootSaga)\n\n  if (module.hot) {\n    module.hot.accept('./reducers', () => {\n      const nextRootReducer = require('./reducers').rootReducer; // eslint-disable-line\n      store.replaceReducer(nextRootReducer);\n    });\n  }\n\n  return store;\n};\n\nexport const store = configureStore();\n\n// Middleware: Redux Persist Persister\nexport const persistor = persistStore(store);\n"]},"metadata":{},"sourceType":"module"}