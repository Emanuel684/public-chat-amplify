{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/home/isg-05/Escritorio/Genesis/genesis/components/Components_Chat.tsx\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { Text, View } from \"./Themed\";\nimport { API, graphqlOperation } from 'aws-amplify';\nimport { listMessages } from \"../src/graphql/queries\";\nimport { useEffect } from 'react';\nexport default function Components_Chat(_ref) {\n  var _this = this;\n\n  var path = _ref.path;\n\n  var _React$useState = React.useState([]),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      data_message = _React$useState2[0],\n      onChangeDataMessage = _React$useState2[1];\n\n  useEffect(function () {\n    console.log(\"useEffect\");\n  });\n  return React.createElement(View, {\n    style: {\n      width: '95%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    style: styles.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }\n  }, \"This is the chat\"), React.createElement(View, {\n    style: styles.container_message_principal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: styles.card_message_principaluser,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.username,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 11\n    }\n  }, \"Name of user\"), React.createElement(Text, {\n    style: styles.message_text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 11\n    }\n  }, \"Message of the user\"))), data_message.map(function (todo, i) {\n    return React.createElement(View, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }\n    }, React.createElement(Text, {\n      style: styles.username,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 13\n      }\n    }, \"Name of user\"));\n  }), React.createElement(View, {\n    style: styles.container_message_second,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: styles.card_message_seconduser,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.username,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 11\n    }\n  }, \"Name of user\"), React.createElement(Text, {\n    style: styles.message_text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 11\n    }\n  }, \"Message of the user\"))));\n}\n\nfunction getData() {\n  return _regeneratorRuntime.async(function getData$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          API.graphql(graphqlOperation(listMessages)).then(function (evt) {\n            console.log(\"evt.data.listMessages.items\", evt.data.listMessages.items);\n            return evt.data.listMessages.items;\n          });\n\n        case 1:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\n\nvar styles = StyleSheet.create({\n  title: {\n    fontSize: 30,\n    fontWeight: 'bold',\n    backgroundColor: '#ff9900',\n    borderRadius: 10,\n    textAlign: 'center'\n  },\n  card_message_principaluser: {\n    backgroundColor: '#ff9900',\n    borderRadius: 10,\n    padding: 10,\n    borderWidth: 2,\n    borderColor: '#ffb445'\n  },\n  message_text: {\n    fontSize: 18\n  },\n  username: {\n    fontSize: 13,\n    fontWeight: 'bold'\n  },\n  container_message_principal: {\n    backgroundColor: '#fff4e3',\n    alignItems: 'flex-end',\n    justifyContent: 'flex-end',\n    paddingTop: 10,\n    paddingEnd: 10\n  },\n  container_message_second: {\n    backgroundColor: '#fff4e3',\n    alignItems: 'flex-start',\n    justifyContent: 'flex-end',\n    paddingStart: 10,\n    paddingBottom: 10,\n    paddingTop: 10\n  },\n  card_message_seconduser: {\n    backgroundColor: '#ffcc82',\n    borderRadius: 10,\n    padding: 10\n  }\n});","map":{"version":3,"sources":["/home/isg-05/Escritorio/Genesis/genesis/components/Components_Chat.tsx"],"names":["React","Text","View","API","graphqlOperation","listMessages","useEffect","Components_Chat","path","useState","data_message","onChangeDataMessage","console","log","width","styles","title","container_message_principal","card_message_principaluser","username","message_text","map","todo","i","container_message_second","card_message_seconduser","getData","graphql","then","evt","data","items","StyleSheet","create","fontSize","fontWeight","backgroundColor","borderRadius","textAlign","padding","borderWidth","borderColor","alignItems","justifyContent","paddingTop","paddingEnd","paddingStart","paddingBottom"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { StyleSheet } from 'react-native';\n\nimport { Text, View } from './Themed';\n\n// This is the part for the suscription \nimport { API, graphqlOperation } from 'aws-amplify';\nimport { onCreateMessage } from '../src/graphql/subscriptions';\nimport { createMessage } from \"../src/graphql/mutations\";\nimport { listMessages } from \"../src/graphql/queries\";\nimport { useEffect } from 'react';\n\nexport default function Components_Chat({ path }: { path: string }) {\n\n  const [data_message, onChangeDataMessage] = React.useState([]);\n\n  // getData(onChangeDataMessage);\n  useEffect(() => {\n    console.log(\"useEffect\")\n  })\n  return (\n    <View style={{width: '95%'}}>\n      <Text style={styles.title}>This is the chat</Text>\n    {/* Contenedor de texto del usuario principal */}\n      <View style={styles.container_message_principal}>\n        <View style={styles.card_message_principaluser}>\n          <Text style={styles.username}>Name of user</Text>\n          <Text style={styles.message_text}>Message of the user</Text>\n        </View>\n      </View>\n    {/* Contenedor de texto del usuario secundario */}\n  {\n      data_message.map((todo: any, i: any) => {\n        return(\n          <View>\n            <Text style={styles.username}>Name of user</Text>\n          </View>\n        )\n      })\n  }\n      <View style={styles.container_message_second}>\n        <View style={styles.card_message_seconduser}>\n          <Text style={styles.username}>Name of user</Text>\n          <Text style={styles.message_text}>Message of the user</Text>\n        </View>\n      </View>\n\n    </View>\n  );\n\n  \n}\n\nasync function getData() {\n  API.graphql(graphqlOperation(listMessages)).then((evt: any) => {\n      console.log(\"evt.data.listMessages.items\",evt.data.listMessages.items);\n      return(evt.data.listMessages.items);\n  });\n}\n\n\nconst styles = StyleSheet.create({\n  title: {\n    fontSize: 30,\n    fontWeight: 'bold',\n    backgroundColor: '#ff9900',\n    borderRadius: 10,\n    textAlign: 'center',\n  },\n  card_message_principaluser: {\n    backgroundColor: '#ff9900',\n    borderRadius: 10,\n    padding: 10,\n    borderWidth: 2,\n    borderColor: '#ffb445',\n  },\n  message_text: {\n    fontSize: 18,\n  },\n  username: {\n    fontSize: 13,\n    fontWeight: 'bold',\n  },\n  container_message_principal: {\n    backgroundColor: '#fff4e3',\n    alignItems: 'flex-end',\n    justifyContent: 'flex-end',\n    paddingTop: 10,\n    paddingEnd: 10,\n  },\n  container_message_second: {\n    backgroundColor: '#fff4e3',\n    alignItems: 'flex-start',\n    justifyContent: 'flex-end',\n    paddingStart: 10,\n    paddingBottom: 10,\n    paddingTop: 10,\n  },\n  card_message_seconduser: {\n    backgroundColor: '#ffcc82',\n    borderRadius: 10,\n    padding: 10,\n  },\n});\n"]},"metadata":{},"sourceType":"module"}