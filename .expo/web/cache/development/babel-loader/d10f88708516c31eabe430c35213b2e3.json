{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/home/isg-05/Escritorio/Genesis/genesis/components/Components_Login.tsx\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { Text, View } from \"./Themed\";\nimport { withAuthenticator } from 'aws-amplify-react-native';\nimport Components_SingOut from \"./Components_SingOut\";\nimport { API, graphqlOperation } from 'aws-amplify';\nimport { createMessage } from \"../src/graphql/mutations\";\n\nfunction Components_Login(_ref) {\n  var path = _ref.path;\n\n  var _React$useState = React.useState(''),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      message = _React$useState2[0],\n      onChangeMessage = _React$useState2[1];\n\n  return React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }\n  }, React.createElement(Components_SingOut, {\n    path: \"/screens/Components_Login.tsx\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }), React.createElement(SafeAreaView, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }, \"Message\"), React.createElement(View, {\n    style: {\n      width: 250\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }, React.createElement(TextInput, {\n    multiline: true,\n    numberOfLines: 20,\n    maxLength: 300,\n    style: styles.input,\n    onChangeText: function onChangeText(Text) {\n      return onChangeMessage(Text);\n    },\n    placeholder: \"Message\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 11\n    }\n  }), React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 11\n    }\n  }, message)), React.createElement(Button, {\n    onPress: sendMessage,\n    title: \"Send message\",\n    color: \"#ff9900\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  })));\n\n  function sendMessage() {\n    var message;\n    return _regeneratorRuntime.async(function sendMessage$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            console.log(\"This is the message: \" + message);\n            message = {\n              username: \"Emanuel\",\n              message: \"Hola este es mi primer mensaje\"\n            };\n            console.log(\"Se ejecuto la funcion de crear mensaje\");\n            _context.next = 5;\n            return _regeneratorRuntime.awrap(API.graphql(graphqlOperation(createMessage, {\n              input: message\n            })));\n\n          case 5:\n            return _context.abrupt(\"return\", _context.sent);\n\n          case 6:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n}\n\nvar styles = StyleSheet.create({\n  title: {\n    fontSize: 30,\n    fontWeight: 'bold',\n    textAlign: 'center',\n    paddingTop: 60,\n    paddingBottom: 20\n  },\n  input: {\n    height: 80,\n    margin: 12,\n    borderWidth: 2,\n    padding: 10,\n    borderColor: '#ffe6bf',\n    borderRadius: 10\n  },\n  buttonText: {\n    fontSize: 24,\n    fontWeight: \"bold\",\n    color: \"#FFFFFF\"\n  },\n  button: {\n    backgroundColor: '#33AAFF',\n    borderWidth: 10,\n    borderRadius: 20,\n    borderColor: \"#33AAFF\",\n    padding: 5\n  }\n});\nexport default withAuthenticator(Components_Login);","map":{"version":3,"sources":["/home/isg-05/Escritorio/Genesis/genesis/components/Components_Login.tsx"],"names":["React","Text","View","withAuthenticator","Components_SingOut","API","graphqlOperation","createMessage","Components_Login","path","useState","message","onChangeMessage","styles","title","width","input","sendMessage","console","log","username","graphql","StyleSheet","create","fontSize","fontWeight","textAlign","paddingTop","paddingBottom","height","margin","borderWidth","padding","borderColor","borderRadius","buttonText","color","button","backgroundColor"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;;AAGA,SAASC,IAAT,EAAeC,IAAf;AAEA,SAASC,iBAAT,QAAkC,0BAAlC;AAGA,OAAOC,kBAAP;AAGA,SAASC,GAAT,EAAcC,gBAAd,QAAsC,aAAtC;AAEA,SAASC,aAAT;;AAKA,SAASC,gBAAT,OAAsD;AAAA,MAA1BC,IAA0B,QAA1BA,IAA0B;;AAEpD,wBAAiCT,KAAK,CAACU,QAAN,CAAe,EAAf,CAAjC;AAAA;AAAA,MAAKC,OAAL;AAAA,MAAcC,eAAd;;AAeA,SACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,kBAAD;AAAoB,IAAA,IAAI,EAAC,+BAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEC,MAAM,CAACC,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,EAEE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEC,MAAAA,KAAK,EAAE;AAAT,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,SAAD;AACE,IAAA,SAAS,EAAE,IADb;AAEE,IAAA,aAAa,EAAE,EAFjB;AAGE,IAAA,SAAS,EAAE,GAHb;AAIE,IAAA,KAAK,EAAEF,MAAM,CAACG,KAJhB;AAKE,IAAA,YAAY,EAAE,sBAAAf,IAAI;AAAA,aAAIW,eAAe,CAACX,IAAD,CAAnB;AAAA,KALpB;AAME,IAAA,WAAW,EAAC,SANd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EASE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOU,OAAP,CATF,CAFF,EAaE,oBAAC,MAAD;AACE,IAAA,OAAO,EAAEM,WADX;AAEE,IAAA,KAAK,EAAC,cAFR;AAGE,IAAA,KAAK,EAAC,SAHR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAbF,CAFF,CADF;;AAwBA,WAAeA,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AACEC,YAAAA,OAAO,CAACC,GAAR,2BAAoCR,OAApC;AACMA,YAAAA,OAFR,GAEkB;AACdS,cAAAA,QAAQ,EAAE,SADI;AAEdT,cAAAA,OAAO;AAFO,aAFlB;AAMAO,YAAAA,OAAO,CAACC,GAAR,CAAY,wCAAZ;AANA;AAAA,6CAOad,GAAG,CAACgB,OAAJ,CAAYf,gBAAgB,CAACC,aAAD,EAAgB;AAAES,cAAAA,KAAK,EAAEL;AAAT,aAAhB,CAA5B,CAPb;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASD;;AAKD,IAAME,MAAM,GAAGS,UAAU,CAACC,MAAX,CAAkB;AAC/BT,EAAAA,KAAK,EAAE;AACLU,IAAAA,QAAQ,EAAE,EADL;AAELC,IAAAA,UAAU,EAAE,MAFP;AAGLC,IAAAA,SAAS,EAAE,QAHN;AAILC,IAAAA,UAAU,EAAE,EAJP;AAKLC,IAAAA,aAAa,EAAE;AALV,GADwB;AAQ/BZ,EAAAA,KAAK,EAAE;AACLa,IAAAA,MAAM,EAAE,EADH;AAELC,IAAAA,MAAM,EAAE,EAFH;AAGLC,IAAAA,WAAW,EAAE,CAHR;AAILC,IAAAA,OAAO,EAAE,EAJJ;AAKLC,IAAAA,WAAW,EAAE,SALR;AAMLC,IAAAA,YAAY,EAAE;AANT,GARwB;AAgB/BC,EAAAA,UAAU,EAAE;AACVX,IAAAA,QAAQ,EAAE,EADA;AAEVC,IAAAA,UAAU,EAAE,MAFF;AAGVW,IAAAA,KAAK,EAAE;AAHG,GAhBmB;AAqB/BC,EAAAA,MAAM,EAAE;AACNC,IAAAA,eAAe,EAAE,SADX;AAENP,IAAAA,WAAW,EAAE,EAFP;AAGNG,IAAAA,YAAY,EAAE,EAHR;AAIND,IAAAA,WAAW,EAAE,SAJP;AAKND,IAAAA,OAAO,EAAE;AALH;AArBuB,CAAlB,CAAf;AA+BA,eAAe7B,iBAAiB,CAACK,gBAAD,CAAhC","sourcesContent":["import React from 'react';\nimport { StyleSheet, SafeAreaView, TextInput, Button } from 'react-native';\n\nimport { Text, View } from './Themed';\n\nimport { withAuthenticator } from 'aws-amplify-react-native';\n\n\nimport Components_SingOut from './Components_SingOut';\n\n// This is the part for the suscription \nimport { API, graphqlOperation } from 'aws-amplify';\nimport { onCreateMessage } from '../src/graphql/subscriptions';\nimport { createMessage } from \"../src/graphql/mutations\";\nimport { listMessages } from \"../src/graphql/queries\";\n\n\n\nfunction Components_Login({ path }: { path: string }) {\n\n  let [message, onChangeMessage] = React.useState('');\n\n  // // Subscribe to creation of Todo\n  // const subscription = API.graphql(\n  //   graphqlOperation(onCreateMessage)\n  // ).subscribe({\n  //   next: (todoData) => {\n  //     console.log(todoData);\n  //     // Do something with the data\n  //   }\n  // });\n\n  // // Stop receiving data updates from the subscription\n  // subscription.unsubscribe();\n\n  return (\n    <View>\n      <Components_SingOut path=\"/screens/Components_Login.tsx\" />\n      <SafeAreaView>\n        <Text style={styles.title}>Message</Text>\n        <View style={{ width: 250 }}>\n          <TextInput\n            multiline={true}\n            numberOfLines={20}\n            maxLength={300}\n            style={styles.input}\n            onChangeText={Text => onChangeMessage(Text)}\n            placeholder=\"Message\"\n          />\n          <Text>{message}</Text>\n        </View>\n        <Button\n          onPress={sendMessage}\n          title=\"Send message\"\n          color=\"#ff9900\" />\n      </SafeAreaView>\n    </View>\n  );\n\n  async function sendMessage() {\n    console.log(`This is the message: ${message}`)\n    const message = {\n      username: \"Emanuel\",\n      message: `Hola este es mi primer mensaje`,\n  };\n  console.log(\"Se ejecuto la funcion de crear mensaje\")\n  return await API.graphql(graphqlOperation(createMessage, { input: message }));\n  }\n}\n\n\n\n\nconst styles = StyleSheet.create({\n  title: {\n    fontSize: 30,\n    fontWeight: 'bold',\n    textAlign: 'center',\n    paddingTop: 60,\n    paddingBottom: 20,\n  },\n  input: {\n    height: 80,\n    margin: 12,\n    borderWidth: 2,\n    padding: 10,\n    borderColor: '#ffe6bf',\n    borderRadius: 10,\n  },\n  buttonText: {\n    fontSize: 24,\n    fontWeight: \"bold\",\n    color: \"#FFFFFF\"\n  },\n  button: {\n    backgroundColor: '#33AAFF',\n    borderWidth: 10,\n    borderRadius: 20,\n    borderColor: \"#33AAFF\",\n    padding: 5,\n  }\n});\n\n\nexport default withAuthenticator(Components_Login);"]},"metadata":{},"sourceType":"module"}