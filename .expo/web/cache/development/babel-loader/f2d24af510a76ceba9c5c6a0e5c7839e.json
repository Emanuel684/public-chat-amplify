{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _marked = _regeneratorRuntime.mark(rootSaga);\n\nimport { all } from 'redux-saga/effects';\nimport processSagas from \"./process/saga\";\nexport default function rootSaga() {\n  return _regeneratorRuntime.wrap(function rootSaga$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return all([processSagas()]);\n\n        case 2:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked);\n}","map":{"version":3,"sources":["/home/isg-05/Escritorio/Genesis/genesis/src/redux/sagas.ts"],"names":["rootSaga","all","processSagas"],"mappings":";;uCAGyBA,Q;;AAHzB,SAASC,GAAT,QAAoB,oBAApB;AACA,OAAOC,YAAP;AAEA,eAAe,SAAUF,QAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACb,iBAAMC,GAAG,CAAC,CAACC,YAAY,EAAb,CAAD,CAAT;;AADa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["import { all } from 'redux-saga/effects';\nimport processSagas from './process/saga';\n\nexport default function* rootSaga() {\n  yield all([processSagas()]);\n}\n"]},"metadata":{},"sourceType":"module"}