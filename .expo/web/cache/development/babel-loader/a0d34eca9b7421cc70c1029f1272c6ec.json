{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/isg-05/Escritorio/Genesis/genesis/src/components/RegisterProducer.tsx\";\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport * as WebBrowser from 'expo-web-browser';\nimport React, { useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { ProducerTypeEnum } from \"../API\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport RNPickerSelect from 'react-native-picker-select';\nimport { Formik } from 'formik';\nimport { widthPercentageToDP } from \"react-native-responsive-screen\";\nimport { Card } from 'react-native-elements';\nimport { createProducer } from \"../redux/process/actions\";\nimport { useDispatch } from 'react-redux';\nimport Swal from 'sweetalert2';\nimport * as yup from 'yup';\n\nvar EditScreenInfo = function EditScreenInfo(_ref) {\n  var path = _ref.path,\n      producer = _ref.producer;\n  var renderLine = !(producer == undefined) && React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 50\n    }\n  }, \"El productor \", producer.name, \" se encuentra registrado en la ciudad de \", producer.city, \" en la \", producer.address, \" e identificado con \", producer.IdType, \" \", producer.personalId);\n\n  var _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      state = _useState2[0],\n      setState = _useState2[1];\n\n  var delay = function delay(ms) {\n    return new Promise(function (res) {\n      return setTimeout(res, ms);\n    });\n  };\n\n  var dispatch = useDispatch();\n  var initialValue = {\n    name: \"\",\n    IdType: undefined,\n    personalId: \"\",\n    address: \"\",\n    city: \"\",\n    producerType: undefined\n  };\n  return React.createElement(Card, {\n    containerStyle: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }, React.createElement(Formik, {\n    initialValues: initialValue,\n    validationSchema: yup.object().shape({\n      name: yup.string().max(20, \"Máximo 20 carácteres\").required(),\n      personalId: yup.string().min(5, \"Debe tener mas de 5 carácteres\").required()\n    }),\n    onSubmit: function _callee(values, _ref2) {\n      var resetForm, newEntry;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              resetForm = _ref2.resetForm;\n              newEntry = {\n                name: values.name,\n                IdType: values.IdType,\n                personalId: values.personalId,\n                address: values.address,\n                city: values.city,\n                producerType: values.producerType\n              };\n              setState(false);\n              dispatch(createProducer(newEntry, []));\n              _context.next = 6;\n              return _regeneratorRuntime.awrap(delay(1000));\n\n            case 6:\n              if (Platform.OS == 'web') {\n                Swal.fire({\n                  position: 'top-end',\n                  icon: 'success',\n                  title: 'Proveedor registrado',\n                  showConfirmButton: false,\n                  timer: 1500\n                });\n              } else {\n                Alert.alert('Registro exitoso', 'Proveedor registrado', [{\n                  text: 'OK'\n                }]);\n              }\n\n              values = _objectSpread({}, initialValue);\n              setState(true);\n              resetForm();\n\n            case 10:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }, function (_ref3) {\n    var handleChange = _ref3.handleChange,\n        handleBlur = _ref3.handleBlur,\n        handleSubmit = _ref3.handleSubmit,\n        values = _ref3.values,\n        errors = _ref3.errors,\n        setFieldTouched = _ref3.setFieldTouched,\n        touched = _ref3.touched,\n        isValid = _ref3.isValid;\n    return React.createElement(View, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 13\n      }\n    }, React.createElement(TextInput, {\n      style: styles.input,\n      onChangeText: handleChange('name'),\n      onBlur: function onBlur() {\n        handleBlur('name'), setFieldTouched('name');\n      },\n      value: values.name,\n      placeholder: \"Nombre\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 15\n      }\n    }), errors.name && touched.name && React.createElement(Text, {\n      style: {\n        fontSize: 10,\n        color: 'red'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 17\n      }\n    }, errors.name), React.createElement(RNPickerSelect, {\n      style: pickerSelectStyles,\n      placeholder: {\n        label: 'Tipo de proveedor...',\n        value: undefined\n      },\n      onValueChange: function onValueChange(value) {\n        return values.producerType = value;\n      },\n      items: [{\n        label: 'Persona Juridica',\n        value: ProducerTypeEnum.Persona_Juridica\n      }, {\n        label: 'Persona Natural',\n        value: ProducerTypeEnum.Persona_Natural\n      }],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 13\n      }\n    }), React.createElement(RNPickerSelect, {\n      style: pickerSelectStyles,\n      placeholder: {\n        label: 'Tipo de documento...',\n        value: undefined\n      },\n      onValueChange: function onValueChange(value) {\n        return values.IdType = value;\n      },\n      items: [{\n        label: 'C.C.',\n        value: \"C.C.\"\n      }, {\n        label: 'C.E.',\n        value: \"C.E.\"\n      }, {\n        label: 'NIT',\n        value: \"NIT\"\n      }, {\n        label: 'T.I.',\n        value: 'T.I.'\n      }, {\n        label: 'Pasaporte',\n        value: \"Pasaporte\"\n      }],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 13\n      }\n    }), React.createElement(TextInput, {\n      style: styles.input,\n      onChangeText: handleChange('personalId'),\n      onBlur: function onBlur() {\n        handleBlur('personalId'), setFieldTouched('personalId');\n      },\n      value: values.personalId,\n      placeholder: \"Identificaci\\xF3n\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 15\n      }\n    }), errors.personalId && touched.personalId && React.createElement(Text, {\n      style: {\n        fontSize: 10,\n        color: 'red'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 17\n      }\n    }, errors.personalId), React.createElement(TextInput, {\n      style: styles.input,\n      onChangeText: handleChange('city'),\n      onBlur: handleBlur('city'),\n      value: values.city,\n      placeholder: \"Ciudad\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 15\n      }\n    }), React.createElement(TextInput, {\n      style: styles.input,\n      onChangeText: handleChange('address'),\n      onBlur: handleBlur('address'),\n      value: values.address,\n      placeholder: \"Direcci\\xF3n\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 15\n      }\n    }), state ? React.createElement(Button, {\n      onPress: handleSubmit,\n      title: \"Registrar\",\n      disabled: !isValid,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 25\n      }\n    }) : React.createElement(ActivityIndicator, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 97\n      }\n    }));\n  }), renderLine);\n};\n\nfunction handleHelpPress() {\n  WebBrowser.openBrowserAsync('https://docs.expo.io/get-started/create-a-new-app/#opening-the-app-on-your-phonetablet');\n}\n\nexport default EditScreenInfo;\nvar styles = StyleSheet.create({\n  container: {\n    backgroundColor: '#fff',\n    flexBasis: 0,\n    flexGrow: 1,\n    flexWrap: 'nowrap',\n    width: widthPercentageToDP('45%'),\n    maxWidth: 450,\n    minWidth: 250\n  },\n  developmentModeText: {\n    marginBottom: 20,\n    fontSize: 14,\n    lineHeight: 19,\n    textAlign: 'center'\n  },\n  contentContainer: {\n    paddingTop: 30\n  },\n  welcomeContainer: {\n    alignItems: 'center',\n    marginTop: 10,\n    marginBottom: 20\n  },\n  welcomeImage: {\n    width: 100,\n    height: 80,\n    resizeMode: 'contain',\n    marginTop: 3,\n    marginLeft: -10\n  },\n  getStartedContainer: {\n    alignItems: 'center',\n    marginHorizontal: 50\n  },\n  homeScreenFilename: {\n    marginVertical: 7\n  },\n  codeHighlightText: {\n    color: 'rgba(96,100,109, 0.8)'\n  },\n  codeHighlightContainer: {\n    borderRadius: 3,\n    paddingHorizontal: 4\n  },\n  getStartedText: {\n    fontSize: 17,\n    lineHeight: 24,\n    textAlign: 'center'\n  },\n  helpContainer: {\n    marginTop: 15,\n    marginHorizontal: 20,\n    alignItems: 'center'\n  },\n  helpLink: {\n    paddingVertical: 15\n  },\n  helpLinkText: {\n    textAlign: 'center'\n  },\n  input: {\n    flex: 1,\n    height: 40,\n    borderColor: '#808080',\n    borderWidth: 1,\n    alignItems: 'stretch',\n    padding: 8,\n    marginVertical: 8\n  }\n});\nvar pickerSelectStyles = StyleSheet.create({\n  inputIOS: {\n    paddingVertical: 12,\n    paddingHorizontal: 10,\n    borderWidth: 1,\n    borderColor: 'gray',\n    borderRadius: 4,\n    color: 'black',\n    marginVertical: 8\n  },\n  inputAndroid: {\n    paddingHorizontal: 10,\n    paddingVertical: 8,\n    borderWidth: 0.5,\n    borderColor: 'gray',\n    borderRadius: 8,\n    color: 'black',\n    marginVertical: 8\n  }\n});","map":{"version":3,"sources":["/home/isg-05/Escritorio/Genesis/genesis/src/components/RegisterProducer.tsx"],"names":["WebBrowser","React","useState","ProducerTypeEnum","RNPickerSelect","Formik","widthPercentageToDP","Card","createProducer","useDispatch","Swal","yup","EditScreenInfo","path","producer","renderLine","undefined","name","city","address","IdType","personalId","state","setState","delay","ms","Promise","res","setTimeout","dispatch","initialValue","producerType","styles","container","object","shape","string","max","required","min","values","resetForm","newEntry","Platform","OS","fire","position","icon","title","showConfirmButton","timer","Alert","alert","text","handleChange","handleBlur","handleSubmit","errors","setFieldTouched","touched","isValid","input","fontSize","color","pickerSelectStyles","label","value","Persona_Juridica","Persona_Natural","handleHelpPress","openBrowserAsync","StyleSheet","create","backgroundColor","flexBasis","flexGrow","flexWrap","width","maxWidth","minWidth","developmentModeText","marginBottom","lineHeight","textAlign","contentContainer","paddingTop","welcomeContainer","alignItems","marginTop","welcomeImage","height","resizeMode","marginLeft","getStartedContainer","marginHorizontal","homeScreenFilename","marginVertical","codeHighlightText","codeHighlightContainer","borderRadius","paddingHorizontal","getStartedText","helpContainer","helpLink","paddingVertical","helpLinkText","flex","borderColor","borderWidth","padding","inputIOS","inputAndroid"],"mappings":";;;;;;;;;;;;AACA,OAAO,KAAKA,UAAZ,MAA4B,kBAA5B;AACA,OAAOC,KAAP,IAAeC,QAAf,QAA8B,OAA9B;;;AAGA,SAA8BC,gBAA9B;;;;;;;AAGA,OAAOC,cAAP,MAA2B,4BAA3B;AACA,SAASC,MAAT,QAAkC,QAAlC;AACA,SAASC,mBAAT,QAAoC,gCAApC;AACA,SAASC,IAAT,QAAqB,uBAArB;AAOA,SAAgCC,cAAhC;AACA,SAAkBC,WAAlB,QAAqC,aAArC;AACA,OAAOC,IAAP,MAAiB,aAAjB;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;;AAQA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,OAA2C;AAAA,MAAxCC,IAAwC,QAAxCA,IAAwC;AAAA,MAAlCC,QAAkC,QAAlCA,QAAkC;AAEhE,MAAMC,UAAU,GAAG,EAAED,QAAQ,IAAIE,SAAd,KAA4B,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAoBF,QAAQ,CAACG,IAA7B,+CAA4EH,QAAQ,CAACI,IAArF,aAAkGJ,QAAQ,CAACK,OAA3G,0BAAwIL,QAAQ,CAACM,MAAjJ,OAA0JN,QAAQ,CAACO,UAAnK,CAA/C;;AAEA,kBAA0BnB,QAAQ,CAAC,IAAD,CAAlC;AAAA;AAAA,MAAOoB,KAAP;AAAA,MAAcC,QAAd;;AAEA,MAAMC,KAAK,GAAG,SAARA,KAAQ,CAAAC,EAAE;AAAA,WAAI,IAAIC,OAAJ,CAAY,UAAAC,GAAG;AAAA,aAAIC,UAAU,CAACD,GAAD,EAAMF,EAAN,CAAd;AAAA,KAAf,CAAJ;AAAA,GAAhB;;AAEA,MAAMI,QAAQ,GAAGpB,WAAW,EAA5B;AAEA,MAAMqB,YAAiC,GAAG;AACxCb,IAAAA,IAAI,EAAE,EADkC;AAExCG,IAAAA,MAAM,EAAEJ,SAFgC;AAGxCK,IAAAA,UAAU,EAAC,EAH6B;AAIxCF,IAAAA,OAAO,EAAC,EAJgC;AAKxCD,IAAAA,IAAI,EAAC,EALmC;AAMxCa,IAAAA,YAAY,EAACf;AAN2B,GAA1C;AASA,SACI,oBAAC,IAAD;AAAM,IAAA,cAAc,EAAIgB,MAAM,CAACC,SAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AACE,IAAA,aAAa,EAAEH,YADjB;AAEE,IAAA,gBAAgB,EACdnB,GAAG,CAACuB,MAAJ,GAAaC,KAAb,CAAmB;AAClBlB,MAAAA,IAAI,EAAEN,GAAG,CACNyB,MADG,GAEHC,GAFG,CAEC,EAFD,EAEK,sBAFL,EAGHC,QAHG,EADY;AAKnBjB,MAAAA,UAAU,EAAEV,GAAG,CACZyB,MADS,GAETG,GAFS,CAEL,CAFK,EAEF,gCAFE,EAGTD,QAHS;AALO,KAAnB,CAHJ;AAaE,IAAA,QAAQ,EAAE,iBAAOE,MAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAgBC,cAAAA,SAAhB,SAAgBA,SAAhB;AACFC,cAAAA,QADE,GAC8B;AACpCzB,gBAAAA,IAAI,EAAEuB,MAAM,CAACvB,IADuB;AAEpCG,gBAAAA,MAAM,EAAEoB,MAAM,CAACpB,MAFqB;AAGpCC,gBAAAA,UAAU,EAACmB,MAAM,CAACnB,UAHkB;AAIpCF,gBAAAA,OAAO,EAACqB,MAAM,CAACrB,OAJqB;AAKpCD,gBAAAA,IAAI,EAACsB,MAAM,CAACtB,IALwB;AAMpCa,gBAAAA,YAAY,EAACS,MAAM,CAACT;AANgB,eAD9B;AAURR,cAAAA,QAAQ,CAAC,KAAD,CAAR;AACAM,cAAAA,QAAQ,CACNrB,cAAc,CAACkC,QAAD,EAAU,EAAV,CADR,CAAR;AAXQ;AAAA,+CAcFlB,KAAK,CAAC,IAAD,CAdH;;AAAA;AAeR,kBAAImB,QAAQ,CAACC,EAAT,IAAe,KAAnB,EAAyB;AACvBlC,gBAAAA,IAAI,CAACmC,IAAL,CAAU;AACRC,kBAAAA,QAAQ,EAAE,SADF;AAERC,kBAAAA,IAAI,EAAE,SAFE;AAGRC,kBAAAA,KAAK,EAAE,sBAHC;AAIRC,kBAAAA,iBAAiB,EAAE,KAJX;AAKRC,kBAAAA,KAAK,EAAE;AALC,iBAAV;AAOD,eARD,MAQO;AACLC,gBAAAA,KAAK,CAACC,KAAN,CACE,kBADF,EAEE,sBAFF,EAGE,CACE;AAAEC,kBAAAA,IAAI,EAAE;AAAR,iBADF,CAHF;AAOD;;AACDb,cAAAA,MAAM,qBAAOV,YAAP,CAAN;AACAP,cAAAA,QAAQ,CAAC,IAAD,CAAR;AACAkB,cAAAA,SAAS;;AAlCD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAbZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAoDG;AAAA,QAAGa,YAAH,SAAGA,YAAH;AAAA,QAAiBC,UAAjB,SAAiBA,UAAjB;AAAA,QAA6BC,YAA7B,SAA6BA,YAA7B;AAAA,QAA2ChB,MAA3C,SAA2CA,MAA3C;AAAA,QAAmDiB,MAAnD,SAAmDA,MAAnD;AAAA,QAA2DC,eAA3D,SAA2DA,eAA3D;AAAA,QAA4EC,OAA5E,SAA4EA,OAA5E;AAAA,QAAqFC,OAArF,SAAqFA,OAArF;AAAA,WACC,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,SAAD;AACE,MAAA,KAAK,EAAI5B,MAAM,CAAC6B,KADlB;AAEE,MAAA,YAAY,EAAEP,YAAY,CAAC,MAAD,CAF5B;AAGE,MAAA,MAAM,EAAE,kBAAK;AACXC,QAAAA,UAAU,CAAC,MAAD,CAAV,EACAG,eAAe,CAAC,MAAD,CADf;AAED,OANH;AAOE,MAAA,KAAK,EAAElB,MAAM,CAACvB,IAPhB;AAQE,MAAA,WAAW,EAAG,QARhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAWGwC,MAAM,CAACxC,IAAP,IAAe0C,OAAO,CAAC1C,IAAvB,IACC,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAE;AAAE6C,QAAAA,QAAQ,EAAE,EAAZ;AAAgBC,QAAAA,KAAK,EAAE;AAAvB,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA8CN,MAAM,CAACxC,IAArD,CAZJ,EAcA,oBAAC,cAAD;AACE,MAAA,KAAK,EAAI+C,kBADX;AAEE,MAAA,WAAW,EAAE;AACXC,QAAAA,KAAK,EAAE,sBADI;AAEXC,QAAAA,KAAK,EAAElD;AAFI,OAFf;AAME,MAAA,aAAa,EAAE,uBAACkD,KAAD;AAAA,eAAY1B,MAAM,CAACT,YAAP,GAAoBmC,KAAhC;AAAA,OANjB;AAOE,MAAA,KAAK,EAAE,CACH;AAAED,QAAAA,KAAK,EAAE,kBAAT;AAA6BC,QAAAA,KAAK,EAAE/D,gBAAgB,CAACgE;AAArD,OADG,EAEH;AAAEF,QAAAA,KAAK,EAAE,iBAAT;AAA4BC,QAAAA,KAAK,EAAE/D,gBAAgB,CAACiE;AAApD,OAFG,CAPT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAdA,EA2BA,oBAAC,cAAD;AACE,MAAA,KAAK,EAAIJ,kBADX;AAEE,MAAA,WAAW,EAAE;AACTC,QAAAA,KAAK,EAAE,sBADE;AAETC,QAAAA,KAAK,EAAElD;AAFE,OAFf;AAME,MAAA,aAAa,EAAE,uBAACkD,KAAD;AAAA,eAAY1B,MAAM,CAACpB,MAAP,GAAc8C,KAA1B;AAAA,OANjB;AAOE,MAAA,KAAK,EAAE,CACH;AAAED,QAAAA,KAAK,EAAE,MAAT;AAAiBC,QAAAA,KAAK,EAAE;AAAxB,OADG,EAEH;AAAED,QAAAA,KAAK,EAAE,MAAT;AAAiBC,QAAAA,KAAK,EAAE;AAAxB,OAFG,EAGH;AAAED,QAAAA,KAAK,EAAE,KAAT;AAAgBC,QAAAA,KAAK,EAAE;AAAvB,OAHG,EAIH;AAAED,QAAAA,KAAK,EAAE,MAAT;AAAiBC,QAAAA,KAAK,EAAE;AAAxB,OAJG,EAKH;AAAED,QAAAA,KAAK,EAAE,WAAT;AAAsBC,QAAAA,KAAK,EAAE;AAA7B,OALG,CAPT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA3BA,EA2CE,oBAAC,SAAD;AACE,MAAA,KAAK,EAAIlC,MAAM,CAAC6B,KADlB;AAEE,MAAA,YAAY,EAAEP,YAAY,CAAC,YAAD,CAF5B;AAGE,MAAA,MAAM,EAAE,kBAAK;AACXC,QAAAA,UAAU,CAAC,YAAD,CAAV,EACAG,eAAe,CAAC,YAAD,CADf;AAED,OANH;AASE,MAAA,KAAK,EAAElB,MAAM,CAACnB,UAThB;AAUE,MAAA,WAAW,EAAG,mBAVhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA3CF,EAuDGoC,MAAM,CAACpC,UAAP,IAAqBsC,OAAO,CAACtC,UAA7B,IACC,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAE;AAAEyC,QAAAA,QAAQ,EAAE,EAAZ;AAAgBC,QAAAA,KAAK,EAAE;AAAvB,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA8CN,MAAM,CAACpC,UAArD,CAxDJ,EA0DE,oBAAC,SAAD;AACE,MAAA,KAAK,EAAIW,MAAM,CAAC6B,KADlB;AAEE,MAAA,YAAY,EAAEP,YAAY,CAAC,MAAD,CAF5B;AAGE,MAAA,MAAM,EAAEC,UAAU,CAAC,MAAD,CAHpB;AAIE,MAAA,KAAK,EAAEf,MAAM,CAACtB,IAJhB;AAKE,MAAA,WAAW,EAAG,QALhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA1DF,EAkEE,oBAAC,SAAD;AACE,MAAA,KAAK,EAAIc,MAAM,CAAC6B,KADlB;AAEE,MAAA,YAAY,EAAEP,YAAY,CAAC,SAAD,CAF5B;AAGE,MAAA,MAAM,EAAEC,UAAU,CAAC,SAAD,CAHpB;AAIE,MAAA,KAAK,EAAEf,MAAM,CAACrB,OAJhB;AAKE,MAAA,WAAW,EAAG,cALhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAlEF,EA0EGG,KAAK,GAAI,oBAAC,MAAD;AAAQ,MAAA,OAAO,EAAEkC,YAAjB;AAA+B,MAAA,KAAK,EAAC,WAArC;AAAiD,MAAA,QAAQ,EAAE,CAACI,OAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAJ,GAA4E,oBAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA1EpF,CADD;AAAA,GApDH,CADF,EAqIG7C,UArIH,CADJ;AAyID,CA5JD;;AA8JA,SAASsD,eAAT,GAA2B;AACzBrE,EAAAA,UAAU,CAACsE,gBAAX,CACE,wFADF;AAGD;;AAED,eAAe1D,cAAf;AAEA,IAAMoB,MAAM,GAAGuC,UAAU,CAACC,MAAX,CAAkB;AAC/BvC,EAAAA,SAAS,EAAE;AACTwC,IAAAA,eAAe,EAAE,MADR;AAETC,IAAAA,SAAS,EAAE,CAFF;AAGTC,IAAAA,QAAQ,EAAE,CAHD;AAITC,IAAAA,QAAQ,EAAE,QAJD;AAKTC,IAAAA,KAAK,EAAEvE,mBAAmB,CAAC,KAAD,CALjB;AAMTwE,IAAAA,QAAQ,EAAG,GANF;AAOTC,IAAAA,QAAQ,EAAE;AAPD,GADoB;AAU/BC,EAAAA,mBAAmB,EAAE;AACnBC,IAAAA,YAAY,EAAE,EADK;AAEnBnB,IAAAA,QAAQ,EAAE,EAFS;AAGnBoB,IAAAA,UAAU,EAAE,EAHO;AAInBC,IAAAA,SAAS,EAAE;AAJQ,GAVU;AAgB/BC,EAAAA,gBAAgB,EAAE;AAChBC,IAAAA,UAAU,EAAE;AADI,GAhBa;AAmB/BC,EAAAA,gBAAgB,EAAE;AAChBC,IAAAA,UAAU,EAAE,QADI;AAEhBC,IAAAA,SAAS,EAAE,EAFK;AAGhBP,IAAAA,YAAY,EAAE;AAHE,GAnBa;AAwB/BQ,EAAAA,YAAY,EAAE;AACZZ,IAAAA,KAAK,EAAE,GADK;AAEZa,IAAAA,MAAM,EAAE,EAFI;AAGZC,IAAAA,UAAU,EAAE,SAHA;AAIZH,IAAAA,SAAS,EAAE,CAJC;AAKZI,IAAAA,UAAU,EAAE,CAAC;AALD,GAxBiB;AA+B/BC,EAAAA,mBAAmB,EAAE;AACnBN,IAAAA,UAAU,EAAE,QADO;AAEnBO,IAAAA,gBAAgB,EAAE;AAFC,GA/BU;AAmC/BC,EAAAA,kBAAkB,EAAE;AAClBC,IAAAA,cAAc,EAAE;AADE,GAnCW;AAsC/BC,EAAAA,iBAAiB,EAAE;AACjBlC,IAAAA,KAAK,EAAE;AADU,GAtCY;AAyC/BmC,EAAAA,sBAAsB,EAAE;AACtBC,IAAAA,YAAY,EAAE,CADQ;AAEtBC,IAAAA,iBAAiB,EAAE;AAFG,GAzCO;AA6C/BC,EAAAA,cAAc,EAAE;AACdvC,IAAAA,QAAQ,EAAE,EADI;AAEdoB,IAAAA,UAAU,EAAE,EAFE;AAGdC,IAAAA,SAAS,EAAE;AAHG,GA7Ce;AAkD/BmB,EAAAA,aAAa,EAAE;AACbd,IAAAA,SAAS,EAAE,EADE;AAEbM,IAAAA,gBAAgB,EAAE,EAFL;AAGbP,IAAAA,UAAU,EAAE;AAHC,GAlDgB;AAuD/BgB,EAAAA,QAAQ,EAAE;AACRC,IAAAA,eAAe,EAAE;AADT,GAvDqB;AA0D/BC,EAAAA,YAAY,EAAE;AACZtB,IAAAA,SAAS,EAAE;AADC,GA1DiB;AA6D/BtB,EAAAA,KAAK,EAAE;AACL6C,IAAAA,IAAI,EAAE,CADD;AAELhB,IAAAA,MAAM,EAAE,EAFH;AAGLiB,IAAAA,WAAW,EAAE,SAHR;AAILC,IAAAA,WAAW,EAAE,CAJR;AAKLrB,IAAAA,UAAU,EAAE,SALP;AAMLsB,IAAAA,OAAO,EAAE,CANJ;AAOLb,IAAAA,cAAc,EAAC;AAPV;AA7DwB,CAAlB,CAAf;AAwEA,IAAMhC,kBAAkB,GAAGO,UAAU,CAACC,MAAX,CAAkB;AAC3CsC,EAAAA,QAAQ,EAAE;AACRN,IAAAA,eAAe,EAAE,EADT;AAERJ,IAAAA,iBAAiB,EAAE,EAFX;AAGRQ,IAAAA,WAAW,EAAE,CAHL;AAIRD,IAAAA,WAAW,EAAE,MAJL;AAKRR,IAAAA,YAAY,EAAE,CALN;AAMRpC,IAAAA,KAAK,EAAE,OANC;AAORiC,IAAAA,cAAc,EAAE;AAPR,GADiC;AAU3Ce,EAAAA,YAAY,EAAE;AACZX,IAAAA,iBAAiB,EAAE,EADP;AAEZI,IAAAA,eAAe,EAAE,CAFL;AAGZI,IAAAA,WAAW,EAAE,GAHD;AAIZD,IAAAA,WAAW,EAAE,MAJD;AAKZR,IAAAA,YAAY,EAAE,CALF;AAMZpC,IAAAA,KAAK,EAAE,OANK;AAOZiC,IAAAA,cAAc,EAAC;AAPH;AAV6B,CAAlB,CAA3B","sourcesContent":["/* eslint-disable react/require-default-props */\nimport * as WebBrowser from 'expo-web-browser';\nimport React, {useState} from 'react';\nimport PropTypes from 'prop-types';\nimport { StyleSheet, TouchableOpacity, Platform, TouchableOpacityBase } from 'react-native';\nimport { CreateProducerInput, ProducerTypeEnum } from '../API';\nimport { API, graphqlOperation} from 'aws-amplify'\nimport { Text, View, TextInput, Button, ActivityIndicator, Alert} from 'react-native';\nimport RNPickerSelect from 'react-native-picker-select';\nimport { Formik, useFormik } from 'formik';\nimport { widthPercentageToDP } from \"react-native-responsive-screen\"\nimport { Card } from 'react-native-elements'\n\nimport Colors from '../constants/Colors';\nimport { createProducer as createProducerGQL } from '../graphql/mutations';\nimport { MonoText } from './StyledText';\n//import { Text, View } from './Themed';\nimport { listProducers } from '../graphql/queries';\nimport { createProducerSuccess, createProducer } from '../redux/process/actions';\nimport { connect, useDispatch } from 'react-redux'\nimport Swal from 'sweetalert2'\nimport * as yup from 'yup'\nimport { TouchableNativeFeedback } from 'react-native-gesture-handler';\n\ninterface EditScreenInfoProps{\n  path:string\n  producer?:CreateProducerInput\n}\n\nconst EditScreenInfo = ({ path, producer}:EditScreenInfoProps) => {\n  \n  const renderLine = !(producer == undefined) && <Text>El productor {producer.name} se encuentra registrado en la ciudad de {producer.city} en la {producer.address} e identificado con {producer.IdType} {producer.personalId}</Text>\n  \n  const [state, setState] = useState(true)\n\n  const delay = ms => new Promise(res => setTimeout(res, ms));\n\n  const dispatch = useDispatch()\n\n  const initialValue: CreateProducerInput = {\n    name: \"\",\n    IdType: undefined,\n    personalId:\"\",\n    address:\"\",\n    city:\"\",\n    producerType:undefined\n}\n\n  return (\n      <Card containerStyle = {styles.container}>\n        <Formik\n          initialValues={initialValue}\n          validationSchema={\n            yup.object().shape({\n             name: yup\n               .string()\n               .max(20, \"Máximo 20 carácteres\")\n               .required(),\n            personalId: yup\n              .string()\n              .min(5, \"Debe tener mas de 5 carácteres\")\n              .required()\n           })}\n          onSubmit={async (values, {resetForm}) => {\n            const newEntry: CreateProducerInput = {\n              name: values.name,\n              IdType: values.IdType,\n              personalId:values.personalId,\n              address:values.address,\n              city:values.city,\n              producerType:values.producerType\n            }\n            \n            setState(false)\n            dispatch(\n              createProducer(newEntry,[])\n              )\n            await delay(1000)\n            if (Platform.OS == 'web'){\n              Swal.fire({\n                position: 'top-end',\n                icon: 'success',\n                title: 'Proveedor registrado',\n                showConfirmButton: false,\n                timer: 1500\n              })\n            } else {\n              Alert.alert(\n                'Registro exitoso',\n                'Proveedor registrado',\n                [\n                  { text: 'OK'}\n                ]\n              );\n            }\n            values = {...initialValue}\n            setState(true)\n            resetForm()\n\n            \n          }}\n        > \n          {({ handleChange, handleBlur, handleSubmit, values, errors, setFieldTouched, touched, isValid }) => (\n            <View >\n              <TextInput\n                style = {styles.input}\n                onChangeText={handleChange('name')}\n                onBlur={() =>{\n                  handleBlur('name'),\n                  setFieldTouched('name')\n                }}\n                value={values.name}\n                placeholder = \"Nombre\"\n              />\n              {errors.name && touched.name && \n                <Text style={{ fontSize: 10, color: 'red' }}>{errors.name}</Text>\n              }\n            <RNPickerSelect\n              style = {pickerSelectStyles}\n              placeholder={{\n                label: 'Tipo de proveedor...',\n                value: undefined,\n                }}\n              onValueChange={(value) => (values.producerType=value)}\n              items={[\n                  { label: 'Persona Juridica', value: ProducerTypeEnum.Persona_Juridica },\n                  { label: 'Persona Natural', value: ProducerTypeEnum.Persona_Natural },\n              ]}\n            />\n\n            <RNPickerSelect\n              style = {pickerSelectStyles}\n              placeholder={{\n                  label: 'Tipo de documento...',\n                  value: undefined,\n                }}\n              onValueChange={(value) => (values.IdType=value)}\n              items={[\n                  { label: 'C.C.', value: \"C.C.\" },\n                  { label: 'C.E.', value: \"C.E.\" },\n                  { label: 'NIT', value: \"NIT\" },\n                  { label: 'T.I.', value: 'T.I.' },\n                  { label: 'Pasaporte', value: \"Pasaporte\" },\n              ]} \n            />\n\n              <TextInput\n                style = {styles.input}\n                onChangeText={handleChange('personalId')}\n                onBlur={() =>{\n                  handleBlur('personalId'),\n                  setFieldTouched('personalId')\n                }\n                  \n                }\n                value={values.personalId}\n                placeholder = \"Identificación\"\n              />\n              {errors.personalId && touched.personalId &&\n                <Text style={{ fontSize: 10, color: 'red' }}>{errors.personalId}</Text>\n              }\n              <TextInput\n                style = {styles.input}\n                onChangeText={handleChange('city')}\n                onBlur={handleBlur('city')}\n                value={values.city}\n                placeholder = \"Ciudad\"\n              />\n\n              <TextInput\n                style = {styles.input}\n                onChangeText={handleChange('address')}\n                onBlur={handleBlur('address')}\n                value={values.address}\n                placeholder = \"Dirección\"\n              />\n\n              {state ?  <Button onPress={handleSubmit} title=\"Registrar\" disabled={!isValid}/>: <ActivityIndicator />}\n\n            </View>\n          )}\n        </Formik>\n        {renderLine}\n      </Card>\n  );\n}\n\nfunction handleHelpPress() {\n  WebBrowser.openBrowserAsync(\n    'https://docs.expo.io/get-started/create-a-new-app/#opening-the-app-on-your-phonetablet'\n  );\n}\n\nexport default EditScreenInfo;\n\nconst styles = StyleSheet.create({\n  container: {\n    backgroundColor: '#fff',\n    flexBasis: 0,\n    flexGrow: 1,\n    flexWrap: 'nowrap',\n    width: widthPercentageToDP('45%'),\n    maxWidth:  450,\n    minWidth: 250\n  },\n  developmentModeText: {\n    marginBottom: 20,\n    fontSize: 14,\n    lineHeight: 19,\n    textAlign: 'center',\n  },\n  contentContainer: {\n    paddingTop: 30,\n  },\n  welcomeContainer: {\n    alignItems: 'center',\n    marginTop: 10,\n    marginBottom: 20,\n  },\n  welcomeImage: {\n    width: 100,\n    height: 80,\n    resizeMode: 'contain',\n    marginTop: 3,\n    marginLeft: -10,\n  },\n  getStartedContainer: {\n    alignItems: 'center',\n    marginHorizontal: 50,\n  },\n  homeScreenFilename: {\n    marginVertical: 7,\n  },\n  codeHighlightText: {\n    color: 'rgba(96,100,109, 0.8)',\n  },\n  codeHighlightContainer: {\n    borderRadius: 3,\n    paddingHorizontal: 4,\n  },\n  getStartedText: {\n    fontSize: 17,\n    lineHeight: 24,\n    textAlign: 'center',\n  },\n  helpContainer: {\n    marginTop: 15,\n    marginHorizontal: 20,\n    alignItems: 'center',\n  },\n  helpLink: {\n    paddingVertical: 15,\n  },\n  helpLinkText: {\n    textAlign: 'center',\n  },\n  input: {\n    flex: 1,\n    height: 40,\n    borderColor: '#808080',\n    borderWidth: 1,\n    alignItems: 'stretch',\n    padding: 8,\n    marginVertical:8,\n },\n});\n\nconst pickerSelectStyles = StyleSheet.create({\n  inputIOS: {\n    paddingVertical: 12,\n    paddingHorizontal: 10,\n    borderWidth: 1,\n    borderColor: 'gray',\n    borderRadius: 4,\n    color: 'black',\n    marginVertical: 8\n  },\n  inputAndroid: {\n    paddingHorizontal: 10,\n    paddingVertical: 8,\n    borderWidth: 0.5,\n    borderColor: 'gray',\n    borderRadius: 8,\n    color: 'black',\n    marginVertical:8\n  },\n});\n"]},"metadata":{},"sourceType":"module"}