{"ast":null,"code":"var _marked = _regeneratorRuntime.mark(createProducer),\n    _marked2 = _regeneratorRuntime.mark(watchCreateProducer),\n    _marked3 = _regeneratorRuntime.mark(rootSaga);\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { all, call, put, takeEvery, fork } from 'redux-saga/effects';\nimport { API, graphqlOperation } from 'aws-amplify';\nimport { createProducer as createProducerGQL } from \"../../graphql/mutations\";\nimport { CREATE_PRODUCER } from \"../actions\";\nimport { createProducerSuccess, createProducerError } from \"./actions\";\n\nvar createProducerAsync = function createProducerAsync(_ref) {\n  var user;\n  return _regeneratorRuntime.async(function createProducerAsync$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          user = _ref.user;\n          _context.next = 3;\n          return _regeneratorRuntime.awrap(API.graphql(graphqlOperation(createProducerGQL, {\n            input: user\n          })));\n\n        case 3:\n          return _context.abrupt(\"return\", null);\n\n        case 4:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nfunction createProducer(_ref2) {\n  var payload, createProducerStatus;\n  return _regeneratorRuntime.wrap(function createProducer$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          payload = _ref2.payload;\n          _context2.prev = 1;\n          _context2.next = 4;\n          return call(createProducerAsync, payload);\n\n        case 4:\n          createProducerStatus = _context2.sent;\n\n          if (createProducerStatus) {\n            _context2.next = 10;\n            break;\n          }\n\n          _context2.next = 8;\n          return put(createProducerSuccess('success'));\n\n        case 8:\n          _context2.next = 12;\n          break;\n\n        case 10:\n          _context2.next = 12;\n          return put(createProducerError(createProducerStatus.message));\n\n        case 12:\n          _context2.next = 18;\n          break;\n\n        case 14:\n          _context2.prev = 14;\n          _context2.t0 = _context2[\"catch\"](1);\n          _context2.next = 18;\n          return put(createProducerError(_context2.t0));\n\n        case 18:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked, null, [[1, 14]]);\n}\n\nexport function watchCreateProducer() {\n  return _regeneratorRuntime.wrap(function watchCreateProducer$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.next = 2;\n          return takeEvery(CREATE_PRODUCER, createProducer);\n\n        case 2:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked2);\n}\nexport default function rootSaga() {\n  return _regeneratorRuntime.wrap(function rootSaga$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          _context4.next = 2;\n          return all([fork(watchCreateProducer)]);\n\n        case 2:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, _marked3);\n}","map":{"version":3,"sources":["/home/isg-05/Escritorio/Genesis/genesis/src/redux/process/saga.ts"],"names":["createProducer","watchCreateProducer","rootSaga","all","call","put","takeEvery","fork","API","graphqlOperation","createProducerGQL","CREATE_PRODUCER","createProducerSuccess","createProducerError","createProducerAsync","user","graphql","input","payload","createProducerStatus","message"],"mappings":"uCAoBUA,c;wCAeOC,mB;wCAIQC,Q;;;AArCzB,SAASC,GAAT,EAAcC,IAAd,EAAoBC,GAApB,EAAyBC,SAAzB,EAAoCC,IAApC,QAAgD,oBAAhD;AACA,SAASC,GAAT,EAAcC,gBAAd,QAAqC,aAArC;AACA,SAAST,cAAc,IAAIU,iBAA3B;AAEA,SACEC,eADF;AAIA,SACEC,qBADF,EAEEC,mBAFF;;AAKA,IAAMC,mBAAmB,GAAG,SAAtBA,mBAAsB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAQC,UAAAA,IAAR,QAAQA,IAAR;AAAA;AAAA,2CACpBP,GAAG,CAACQ,OAAJ,CAAYP,gBAAgB,CAACC,iBAAD,EAAoB;AAACO,YAAAA,KAAK,EAAEF;AAAR,WAApB,CAA5B,CADoB;;AAAA;AAAA,2CAEnB,IAFmB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAA5B;;AAKA,SAAUf,cAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAA2BkB,UAAAA,OAA3B,SAA2BA,OAA3B;AAAA;AAAA;AAGiC,iBAAMd,IAAI,CAACU,mBAAD,EAAsBI,OAAtB,CAAV;;AAHjC;AAGUC,UAAAA,oBAHV;;AAAA,cAISA,oBAJT;AAAA;AAAA;AAAA;;AAAA;AAKM,iBAAMd,GAAG,CAACO,qBAAqB,CAAC,SAAD,CAAtB,CAAT;;AALN;AAAA;AAAA;;AAAA;AAAA;AAOM,iBAAMP,GAAG,CAACQ,mBAAmB,CAACM,oBAAoB,CAACC,OAAtB,CAApB,CAAT;;AAPN;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAUI,iBAAMf,GAAG,CAACQ,mBAAmB,cAApB,CAAT;;AAVJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAeA,OAAO,SAAUZ,mBAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACL,iBAAMK,SAAS,CAACK,eAAD,EAAkBX,cAAlB,CAAf;;AADK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIP,eAAe,SAAUE,QAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACb,iBAAMC,GAAG,CAAC,CACRI,IAAI,CAACN,mBAAD,CADI,CAAD,CAAT;;AADa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["/* eslint-disable max-len */\r\n\r\nimport { all, call, put, takeEvery, fork } from 'redux-saga/effects';\r\nimport { API, graphqlOperation} from 'aws-amplify'\r\nimport { createProducer as createProducerGQL } from '../../graphql/mutations';\r\n\r\nimport {\r\n  CREATE_PRODUCER,\r\n} from '../actions';\r\n\r\nimport {\r\n  createProducerSuccess,\r\n  createProducerError,\r\n} from './actions';\r\n\r\nconst createProducerAsync = async ({user}) => {\r\n  await API.graphql(graphqlOperation(createProducerGQL, {input: user}))\r\n  return null;\r\n};\r\n\r\nfunction* createProducer({ payload }:any) {\r\n  // const { name, IdType, producerType, personalId, adress, city } = payload.user;\r\n  try {\r\n    const createProducerStatus = yield call(createProducerAsync, payload);\r\n    if (!createProducerStatus) {\r\n      yield put(createProducerSuccess('success'));\r\n    } else {\r\n      yield put(createProducerError(createProducerStatus.message));\r\n    }\r\n  } catch (error) {\r\n    yield put(createProducerError(error));\r\n\r\n  }\r\n}\r\n\r\nexport function* watchCreateProducer() {\r\n  yield takeEvery(CREATE_PRODUCER, createProducer);\r\n}\r\n\r\nexport default function* rootSaga() {\r\n  yield all([\r\n    fork(watchCreateProducer),\r\n  ]);\r\n}"]},"metadata":{},"sourceType":"module"}