{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/home/isg-05/Escritorio/Genesis/genesis/components/Components_Login.tsx\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { Text, View } from \"./Themed\";\nimport { withAuthenticator } from 'aws-amplify-react-native';\nimport Components_SingOut from \"./Components_SingOut\";\nimport { API, graphqlOperation, Auth } from 'aws-amplify';\nimport { onCreateMessage } from \"../src/graphql/subscriptions\";\nimport { createMessage } from \"../src/graphql/mutations\";\nimport { useEffect } from 'react';\n\nfunction Components_Login(_ref) {\n  var path = _ref.path;\n\n  var _React$useState = React.useState(''),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      message = _React$useState2[0],\n      onChangeMessage = _React$useState2[1];\n\n  useEffect(function () {\n    var subscription = API.graphql(graphqlOperation(onCreateMessage)).subscribe({\n      next: function next(todoData) {\n        console.log(\"todoData\", todoData);\n      }\n    });\n  }, []);\n  return React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }\n  }, React.createElement(Components_SingOut, {\n    path: \"/screens/Components_Login.tsx\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }), React.createElement(SafeAreaView, {\n    style: {\n      paddingBottom: 20\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }, \"Message\"), React.createElement(View, {\n    style: {\n      width: 250\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }, React.createElement(TextInput, {\n    multiline: true,\n    numberOfLines: 20,\n    maxLength: 300,\n    style: styles.input,\n    onChangeText: function onChangeText(Text) {\n      return onChangeMessage(Text);\n    },\n    placeholder: \"Message\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 11\n    }\n  })), React.createElement(Button, {\n    onPress: function onPress() {\n      return sendMessage(message);\n    },\n    title: \"Send message\",\n    color: \"#ff9900\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  })));\n}\n\nfunction sendMessage(message) {\n  var send_message;\n  return _regeneratorRuntime.async(function sendMessage$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _regeneratorRuntime.awrap(Auth.currentAuthenticatedUser().then(function (a) {\n            return console.log(a);\n          }));\n\n        case 2:\n          _context.t0 = _context.sent;\n          _context.t1 = message;\n          send_message = {\n            username: _context.t0,\n            message: _context.t1\n          };\n          _context.next = 7;\n          return _regeneratorRuntime.awrap(API.graphql(graphqlOperation(createMessage, {\n            input: send_message\n          })));\n\n        case 7:\n          return _context.abrupt(\"return\", _context.sent);\n\n        case 8:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\n\nvar styles = StyleSheet.create({\n  title: {\n    fontSize: 30,\n    fontWeight: 'bold',\n    textAlign: 'center',\n    paddingTop: 40,\n    paddingBottom: 20\n  },\n  input: {\n    height: 80,\n    margin: 12,\n    borderWidth: 2,\n    padding: 10,\n    borderColor: '#ffe6bf',\n    borderRadius: 10\n  },\n  buttonText: {\n    fontSize: 24,\n    fontWeight: \"bold\",\n    color: \"#FFFFFF\"\n  },\n  button: {\n    backgroundColor: '#33AAFF',\n    borderWidth: 10,\n    borderRadius: 20,\n    borderColor: \"#33AAFF\",\n    padding: 5\n  }\n});\nexport default withAuthenticator(Components_Login);","map":{"version":3,"sources":["/home/isg-05/Escritorio/Genesis/genesis/components/Components_Login.tsx"],"names":["React","Text","View","withAuthenticator","Components_SingOut","API","graphqlOperation","Auth","onCreateMessage","createMessage","useEffect","Components_Login","path","useState","message","onChangeMessage","subscription","graphql","subscribe","next","todoData","console","log","paddingBottom","styles","title","width","input","sendMessage","currentAuthenticatedUser","then","a","send_message","username","StyleSheet","create","fontSize","fontWeight","textAlign","paddingTop","height","margin","borderWidth","padding","borderColor","borderRadius","buttonText","color","button","backgroundColor"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { StyleSheet, SafeAreaView, TextInput, Button } from 'react-native';\n\nimport { Text, View } from './Themed';\n\nimport { withAuthenticator } from 'aws-amplify-react-native';\n\n\nimport Components_SingOut from './Components_SingOut';\n\n// This is the part for the suscription \nimport { API, graphqlOperation, Auth } from 'aws-amplify';\nimport { onCreateMessage } from '../src/graphql/subscriptions';\nimport { createMessage } from \"../src/graphql/mutations\";\nimport { listMessages } from \"../src/graphql/queries\";\n\n\nimport { useEffect } from 'react';\n\nfunction Components_Login({ path }: { path: string }) {\n\n  const [message, onChangeMessage] = React.useState('');\n\n  // Subscribe to creation of Todo\n  useEffect(() =>{\n    const subscription = API.graphql(\n      graphqlOperation(onCreateMessage)\n    ).subscribe({\n      next: (todoData: any) => {\n        console.log(\"todoData\", todoData);\n        // Do something with the data\n      }\n    });\n  }, [])\n  \n\n\n  // // Stop receiving data updates from the subscription\n  // subscription.unsubscribe();\n\n  return (\n    <View>\n      <Components_SingOut path=\"/screens/Components_Login.tsx\" />\n      <SafeAreaView style={{paddingBottom: 20}}>\n        <Text style={styles.title}>Message</Text>\n        <View style={{ width: 250 }}>\n          <TextInput\n            multiline={true}\n            numberOfLines={20}\n            maxLength={300}\n            style={styles.input}\n            onChangeText={Text => onChangeMessage(Text)}\n            placeholder=\"Message\"\n          />\n        </View>\n        <Button\n          onPress={() => sendMessage(message)}\n          title=\"Send message\"\n          color=\"#ff9900\" />\n      </SafeAreaView>\n    </View>\n  );\n}\n\nasync function sendMessage(message: string) {\n  const send_message = {\n    username: await Auth.currentAuthenticatedUser().then((a) => console.log(a)),\n    message: message,\n  };\n  return await API.graphql(graphqlOperation(createMessage, { input: send_message }));\n}\n\n\n\nconst styles = StyleSheet.create({\n  title: {\n    fontSize: 30,\n    fontWeight: 'bold',\n    textAlign: 'center',\n    paddingTop: 40,\n    paddingBottom: 20,\n  },\n  input: {\n    height: 80,\n    margin: 12,\n    borderWidth: 2,\n    padding: 10,\n    borderColor: '#ffe6bf',\n    borderRadius: 10,\n  },\n  buttonText: {\n    fontSize: 24,\n    fontWeight: \"bold\",\n    color: \"#FFFFFF\"\n  },\n  button: {\n    backgroundColor: '#33AAFF',\n    borderWidth: 10,\n    borderRadius: 20,\n    borderColor: \"#33AAFF\",\n    padding: 5,\n  }\n});\n\n\nexport default withAuthenticator(Components_Login);"]},"metadata":{},"sourceType":"module"}