{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/home/isg-05/Escritorio/Genesis/genesis/src/components/ProducerList.tsx\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport { API, graphqlOperation } from 'aws-amplify';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { Card } from 'react-native-elements';\nimport { deleteProducer } from \"../graphql/mutations\";\nimport { onCreateProducer } from \"../graphql/subscriptions\";\nimport { listProducers } from \"../graphql/queries\";\nimport { widthPercentageToDP } from \"react-native-responsive-screen\";\nimport { Table, Row } from 'react-native-table-component';\n\nvar ExampleThree = function (_Component) {\n  _inherits(ExampleThree, _Component);\n\n  var _super = _createSuper(ExampleThree);\n\n  function ExampleThree(props) {\n    var _this;\n\n    _classCallCheck(this, ExampleThree);\n\n    _this = _super.call(this, props);\n\n    _this.getItems = function () {\n      API.graphql(graphqlOperation(listProducers)).then(function (data) {\n        return _this.setState({\n          items: data.data.listProducers.items\n        });\n      });\n    };\n\n    _this.deleteProducer = function _callee(idToDelete) {\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(API.graphql(graphqlOperation(deleteProducer, {\n                input: {\n                  id: idToDelete\n                }\n              })));\n\n            case 2:\n              _this.getItems();\n\n            case 3:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.renderTable = function () {\n      var showData = [];\n\n      var tableButton = function tableButton(id) {\n        return React.createElement(TouchableOpacity, {\n          onPress: function onPress() {\n            return _this.deleteProducer(id);\n          },\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 9\n          }\n        }, React.createElement(View, {\n          style: styles.btn,\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 11\n          }\n        }, React.createElement(Text, {\n          style: styles.btnText,\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 13\n          }\n        }, \"Eliminar\")));\n      };\n\n      _this.state.items.forEach(function (element) {\n        var rowData = [];\n        rowData.push(element.name);\n        rowData.push(element.producerType);\n        rowData.push(element.IdType);\n        rowData.push(element.personalId);\n        rowData.push(tableButton(element.id));\n        showData.push(rowData);\n      });\n\n      return React.createElement(View, {\n        style: styles.container,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 9\n        }\n      }, React.createElement(ScrollView, {\n        horizontal: true,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 13\n        }\n      }, React.createElement(View, {\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 13\n        }\n      }, React.createElement(Table, {\n        borderStyle: {\n          borderWidth: 1,\n          borderColor: '#C1C0B9'\n        },\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 17\n        }\n      }, React.createElement(Row, {\n        data: _this.state.tableHead,\n        widthArr: _this.state.widthArr,\n        style: styles.header,\n        textStyle: styles.text,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 17\n        }\n      })), React.createElement(Table, {\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 17\n        }\n      }, showData.map(function (rowData, index) {\n        return React.createElement(Row, {\n          key: index,\n          data: rowData,\n          widthArr: _this.state.widthArr,\n          style: [styles.row, index % 2 && {\n            backgroundColor: '#00C000'\n          }],\n          textStyle: styles.text,\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 25\n          }\n        });\n      })))));\n    };\n\n    _this.state = {\n      tableHead: ['Nombre', 'Tipo de Proveedor', 'Tipo de documento', 'Documento', 'Eliminar'],\n      widthArr: [80, 100, 80, 80, 100],\n      isLoading: true,\n      items: []\n    };\n    return _this;\n  }\n\n  _createClass(ExampleThree, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      this.getItems();\n      this.setState({\n        isLoading: false\n      });\n      var subscription = API.graphql(graphqlOperation(onCreateProducer)).subscribe({\n        next: function next(subData) {\n          var newProvider = subData.value.data.onCreateProducer;\n\n          _this2.setState({\n            items: [newProvider].concat(_this2.state.items)\n          });\n        }\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Card, {\n        containerStyle: styles.card,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 13\n        }\n      }, this.state.isLoading ? React.createElement(ActivityIndicator, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 37\n        }\n      }) : this.renderTable());\n    }\n  }]);\n\n  return ExampleThree;\n}(Component);\n\nexport { ExampleThree as default };\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 16,\n    paddingTop: 30,\n    backgroundColor: '#fff'\n  },\n  header: {\n    height: 50,\n    backgroundColor: '#008000'\n  },\n  text: {\n    textAlign: 'center',\n    fontWeight: '100'\n  },\n  dataWrapper: {\n    marginTop: -1\n  },\n  row: {\n    height: 40,\n    backgroundColor: '#F0F0F0',\n    alignItems: 'center'\n  },\n  btn: {\n    width: 58,\n    height: 18,\n    backgroundColor: '#D00000',\n    borderRadius: 2,\n    alignSelf: 'center'\n  },\n  btnText: {\n    textAlign: 'center',\n    color: '#fff'\n  },\n  card: {\n    backgroundColor: '#fff',\n    flexBasis: 0,\n    flexGrow: 1,\n    flexWrap: 'nowrap',\n    width: widthPercentageToDP('45%'),\n    maxWidth: 750,\n    minWidth: 250,\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n});","map":{"version":3,"sources":["/home/isg-05/Escritorio/Genesis/genesis/src/components/ProducerList.tsx"],"names":["React","Component","API","graphqlOperation","Card","deleteProducer","onCreateProducer","listProducers","widthPercentageToDP","Table","Row","ExampleThree","props","getItems","graphql","then","data","setState","items","idToDelete","input","id","renderTable","showData","tableButton","styles","btn","btnText","state","forEach","element","rowData","push","name","producerType","IdType","personalId","container","borderWidth","borderColor","tableHead","widthArr","header","text","map","index","row","backgroundColor","isLoading","subscription","subscribe","next","subData","newProvider","value","concat","card","StyleSheet","create","flex","padding","paddingTop","height","textAlign","fontWeight","dataWrapper","marginTop","alignItems","width","borderRadius","alignSelf","color","flexBasis","flexGrow","flexWrap","maxWidth","minWidth","justifyContent"],"mappings":"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","sourcesContent":["/* eslint-disable react/require-default-props */\nimport * as WebBrowser from 'expo-web-browser';\nimport React, {useState, Component} from 'react';\n\nimport { API, graphqlOperation} from 'aws-amplify'\nimport { Text, View, TextInput, Button, ActivityIndicator, Alert, StyleSheet, TouchableOpacity, Platform, ScrollView, } from 'react-native';\nimport { Card } from 'react-native-elements'\nimport { createProducer as createProducerGQL, deleteProducer } from '../graphql/mutations';\nimport { onCreateProducer } from '../graphql/subscriptions'\nimport { listProducers } from '../graphql/queries';\nimport { createProducerSuccess, createProducer } from '../redux/process/actions';\nimport { widthPercentageToDP } from \"react-native-responsive-screen\"\n\n// @ts-ignore\nimport { Table, TableWrapper, Row, Rows, Col, Cell } from 'react-native-table-component';\nimport { connect } from 'react-redux'\nimport { render } from 'enzyme';\n\n \nexport default class ExampleThree extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      tableHead: ['Nombre', 'Tipo de Proveedor', 'Tipo de documento', 'Documento', 'Eliminar'],\n      widthArr: [80, 100, 80, 80, 100],\n      isLoading: true,\n      items: []\n    }\n  }\n\n\n  getItems = () => {\n      API.graphql(graphqlOperation(listProducers)).then(data => this.setState({items:data.data.listProducers.items}))\n  }\n\n  componentDidMount(){\n      this.getItems()\n      this.setState({isLoading: false})\n      const subscription = API.graphql(\n        graphqlOperation(onCreateProducer)\n          ).subscribe({\n              next: subData => {\n                const newProvider = subData.value.data.onCreateProducer \n                this.setState({items: [newProvider].concat(this.state.items)})\n              }\n          });\n    }\n\n  deleteProducer = async (idToDelete) =>{\n    await API.graphql(graphqlOperation(deleteProducer,{input:{id: idToDelete}}))\n    this.getItems()\n  }\n\n  renderTable = () => {\n\n    const showData = []\n\n\n    const tableButton = (id) => (\n        <TouchableOpacity onPress={() => this.deleteProducer(id)}>\n          <View style={styles.btn}>\n            <Text style={styles.btnText}>Eliminar</Text>\n          </View>\n        </TouchableOpacity>\n      );\n\n    \n    this.state.items.forEach( (element) => {\n        const rowData = []\n        rowData.push(element.name)\n        rowData.push(element.producerType)\n        rowData.push(element.IdType)\n        rowData.push(element.personalId)\n        rowData.push(tableButton(element.id))\n        showData.push(rowData)\n    } )\n\n    return (\n\n        <View style={styles.container}>\n            <ScrollView horizontal={true}>\n            <View>\n                <Table borderStyle={{borderWidth: 1, borderColor: '#C1C0B9'}}>\n                <Row data={this.state.tableHead} widthArr={this.state.widthArr} style={styles.header} textStyle={styles.text}/>\n                </Table>\n                <Table>\n                    {\n                    showData.map((rowData, index) => (\n                        <Row\n                        key={index}\n                        data={rowData}\n                        widthArr={this.state.widthArr}\n                        style={[styles.row, index%2 && {backgroundColor: '#00C000'}]}\n                        textStyle={styles.text}\n                        />\n                    ))\n                    }\n                </Table>\n            </View>\n            </ScrollView>\n        </View>\n    )\n    \n    }\n \n    render() {\n\n        return (\n            <Card containerStyle={styles.card}>\n            {this.state.isLoading ? <ActivityIndicator /> : this.renderTable() }\n            </ Card>\n        )\n    }\n}\n \nconst styles = StyleSheet.create({\n  container: { flex: 1, padding: 16, paddingTop: 30, backgroundColor: '#fff' },\n  header: { height: 50, backgroundColor: '#008000' },\n  text: { textAlign: 'center', fontWeight: '100' },\n  dataWrapper: { marginTop: -1 },\n  row: { height: 40, backgroundColor: '#F0F0F0', alignItems: 'center' },\n  btn: { width: 58, height: 18, backgroundColor: '#D00000',  borderRadius: 2, alignSelf:'center' },\n  btnText: { textAlign: 'center', color: '#fff' },\n  card: {\n    backgroundColor: '#fff',\n    flexBasis: 0,\n    flexGrow: 1,\n    flexWrap: 'nowrap',\n    width: widthPercentageToDP('45%'),\n    maxWidth:  750,\n    minWidth: 250,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n});\n"]},"metadata":{},"sourceType":"module"}