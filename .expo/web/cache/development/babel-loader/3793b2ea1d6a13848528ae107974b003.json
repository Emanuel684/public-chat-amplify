{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/home/isg-05/Escritorio/Genesis/genesis/components/Components_Chat.tsx\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { Text, View } from \"./Themed\";\nimport { API, graphqlOperation, Auth } from 'aws-amplify';\nimport { listMessages } from \"../src/graphql/queries\";\nimport { useEffect } from 'react';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nexport default function Components_Chat(_ref) {\n  var _this = this;\n\n  var path = _ref.path;\n\n  var _React$useState = React.useState([]),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      data_message = _React$useState2[0],\n      onChangeDataMessage = _React$useState2[1];\n\n  var _React$useState3 = React.useState(true),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      validator = _React$useState4[0],\n      onChangeValidator = _React$useState4[1];\n\n  useEffect(function () {\n    getData();\n  }, []);\n\n  function getData() {\n    return _regeneratorRuntime.async(function getData$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            API.graphql(graphqlOperation(listMessages)).then(function (evt) {\n              console.log(\"evt.data.listMessages.items\", evt.data.listMessages.items);\n              return onChangeDataMessage(evt.data.listMessages.items);\n            });\n\n          case 1:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  return React.createElement(View, {\n    style: {\n      width: '95%',\n      height: 500\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    style: styles.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }, \"This is the chat\"), React.createElement(ScrollView, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }, data_message.map(function (todo, i) {\n    if (todo.username == 'Emanuel') {\n      return React.createElement(View, {\n        style: styles.container_message_principal,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 17\n        }\n      }, React.createElement(View, {\n        style: styles.card_message_principaluser,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 19\n        }\n      }, React.createElement(Text, {\n        style: styles.username,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }\n      }, todo.username), React.createElement(Text, {\n        style: styles.message_text,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }\n      }, todo.message)));\n    } else if (todo.username != AsyncStorage.getItem(\"CognitoIdentityServiceProvider.nskca2jku91u87p31ug78tk2o.LastAuthUser\")) {\n      Auth.currentAuthenticatedUser().then(function (a) {\n        return console.log(a);\n      });\n      return React.createElement(View, {\n        style: styles.container_message_second,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 17\n        }\n      }, React.createElement(View, {\n        style: styles.card_message_seconduser,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 19\n        }\n      }, React.createElement(Text, {\n        style: styles.username,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }\n      }, todo.username), React.createElement(Text, {\n        style: styles.message_text,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }\n      }, todo.message)));\n    }\n  })));\n}\n\nfunction getData() {\n  return _regeneratorRuntime.async(function getData$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          API.graphql(graphqlOperation(listMessages)).then(function (evt) {\n            return evt.data.listMessages.items;\n          });\n\n        case 1:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\n\nvar styles = StyleSheet.create({\n  title: {\n    fontSize: 30,\n    fontWeight: 'bold',\n    backgroundColor: '#ff9900',\n    borderRadius: 10,\n    textAlign: 'center'\n  },\n  card_message_principaluser: {\n    backgroundColor: '#ff9900',\n    borderRadius: 10,\n    padding: 10,\n    borderWidth: 2,\n    borderColor: '#ffb445'\n  },\n  message_text: {\n    fontSize: 18\n  },\n  username: {\n    fontSize: 13,\n    fontWeight: 'bold'\n  },\n  container_message_principal: {\n    backgroundColor: '#fff4e3',\n    alignItems: 'flex-end',\n    justifyContent: 'flex-end',\n    paddingTop: 10,\n    paddingEnd: 10\n  },\n  container_message_second: {\n    backgroundColor: '#fff4e3',\n    alignItems: 'flex-start',\n    justifyContent: 'flex-end',\n    paddingStart: 10,\n    paddingBottom: 10,\n    paddingTop: 10\n  },\n  card_message_seconduser: {\n    backgroundColor: '#ffcc82',\n    borderRadius: 10,\n    padding: 10\n  }\n});","map":{"version":3,"sources":["/home/isg-05/Escritorio/Genesis/genesis/components/Components_Chat.tsx"],"names":["React","Text","View","API","graphqlOperation","Auth","listMessages","useEffect","AsyncStorage","Components_Chat","path","useState","data_message","onChangeDataMessage","validator","onChangeValidator","getData","graphql","then","evt","console","log","data","items","width","height","styles","title","map","todo","i","username","container_message_principal","card_message_principaluser","message_text","message","getItem","currentAuthenticatedUser","a","container_message_second","card_message_seconduser","StyleSheet","create","fontSize","fontWeight","backgroundColor","borderRadius","textAlign","padding","borderWidth","borderColor","alignItems","justifyContent","paddingTop","paddingEnd","paddingStart","paddingBottom"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { StyleSheet, ScrollView } from 'react-native';\n\nimport { Text, View } from './Themed';\n\n// This is the part for the suscription \nimport { API, graphqlOperation, Auth } from 'aws-amplify';\nimport { onCreateMessage } from '../src/graphql/subscriptions';\nimport { createMessage } from \"../src/graphql/mutations\";\nimport { listMessages } from \"../src/graphql/queries\";\n\nimport { useEffect } from 'react';\n\nimport AsyncStorage from '@react-native-async-storage/async-storage';\n\nexport default function Components_Chat({ path }: { path: string }) {\n\n  const [data_message, onChangeDataMessage] = React.useState([]);\n  const [validator, onChangeValidator] = React.useState(true);\n\n  useEffect(() => {\n    // if (validator) {\n    //   getData()\n    //   onChangeValidator(false)\n    // }\n    getData()\n  },[])\n\n  async function getData() {\n    API.graphql(graphqlOperation(listMessages)).then((evt: any) => {\n      console.log(\"evt.data.listMessages.items\", evt.data.listMessages.items);\n      return (onChangeDataMessage(evt.data.listMessages.items));\n    });\n  }\n\n\n  return (\n    <View style={{ width: '95%', height: 500 }}>\n      <Text style={styles.title}>This is the chat</Text>\n      <ScrollView>\n        {/* Contenedor de texto del usuario principal */}\n        {/* <View style={styles.container_message_principal}>\n          <View style={styles.card_message_principaluser}>\n            <Text style={styles.username}>Name of user</Text>\n            <Text style={styles.message_text}>Message of the user</Text>\n          </View>\n        </View> */}\n        {/* Contenedor de texto del usuario secundario */}\n        {\n          data_message.map((todo: any, i: any) => {\n            if (todo.username == 'Emanuel') {\n              return (\n                <View style={styles.container_message_principal}>\n                  <View style={styles.card_message_principaluser}>\n                    <Text style={styles.username}>{todo.username}</Text>\n                    <Text style={styles.message_text}>{todo.message}</Text>\n                  </View>\n                </View>\n              )\n            } else if (todo.username != AsyncStorage.getItem(\"CognitoIdentityServiceProvider.nskca2jku91u87p31ug78tk2o.LastAuthUser\")) {\n              Auth.currentAuthenticatedUser().then((a) => console.log(a))\n              return (\n                <View style={styles.container_message_second}>\n                  <View style={styles.card_message_seconduser}>\n                    <Text style={styles.username}>{todo.username}</Text>\n                    <Text style={styles.message_text}>{todo.message}</Text>\n                  </View>\n                </View>\n              )\n            }\n          })\n        }\n        {/* <View style={styles.container_message_second}>\n        <View style={styles.card_message_seconduser}>\n          <Text style={styles.username}>Name of user</Text>\n          <Text style={styles.message_text}>Message of the user</Text>\n        </View>\n      </View> */}\n\n      </ScrollView>\n    </View>\n  );\n\n\n}\n\nasync function getData() {\n  API.graphql(graphqlOperation(listMessages)).then((evt: any) => {\n    return (evt.data.listMessages.items);\n  });\n}\n\n\nconst styles = StyleSheet.create({\n  title: {\n    fontSize: 30,\n    fontWeight: 'bold',\n    backgroundColor: '#ff9900',\n    borderRadius: 10,\n    textAlign: 'center',\n  },\n  card_message_principaluser: {\n    backgroundColor: '#ff9900',\n    borderRadius: 10,\n    padding: 10,\n    borderWidth: 2,\n    borderColor: '#ffb445',\n  },\n  message_text: {\n    fontSize: 18,\n  },\n  username: {\n    fontSize: 13,\n    fontWeight: 'bold',\n  },\n  container_message_principal: {\n    backgroundColor: '#fff4e3',\n    alignItems: 'flex-end',\n    justifyContent: 'flex-end',\n    paddingTop: 10,\n    paddingEnd: 10,\n  },\n  container_message_second: {\n    backgroundColor: '#fff4e3',\n    alignItems: 'flex-start',\n    justifyContent: 'flex-end',\n    paddingStart: 10,\n    paddingBottom: 10,\n    paddingTop: 10,\n  },\n  card_message_seconduser: {\n    backgroundColor: '#ffcc82',\n    borderRadius: 10,\n    padding: 10,\n  },\n});\n"]},"metadata":{},"sourceType":"module"}