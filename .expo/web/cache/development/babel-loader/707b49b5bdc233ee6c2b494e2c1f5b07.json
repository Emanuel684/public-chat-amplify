{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/home/isg-05/Escritorio/Genesis/genesis/components/Components_Chat.tsx\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useRef } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport { Text, View } from \"./Themed\";\nimport { API, graphqlOperation, Auth } from 'aws-amplify';\nimport { onCreateMessage } from \"../src/graphql/subscriptions\";\nimport { listMessages } from \"../src/graphql/queries\";\nimport { useEffect } from 'react';\nexport default function Components_Chat(_ref) {\n  var _this = this;\n\n  var path = _ref.path;\n\n  if (usernamelogin == \"Emanuel\") {\n    var _ref2 = React.useState([]),\n        _ref3 = _slicedToArray(_ref2, 2),\n        data_message = _ref3[0],\n        onChangeDataMessage = _ref3[1];\n\n    var _ref4 = React.useState(Auth.currentAuthenticatedUser().then(function (a) {\n      return a.username;\n    })),\n        _ref5 = _slicedToArray(_ref4, 2),\n        _usernamelogin = _ref5[0],\n        onChangeUsernameLogin = _ref5[1];\n\n    console.log(\"username logueado\", _usernamelogin);\n\n    var _React$useState = React.useState(true),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        validator = _React$useState2[0],\n        onChangeValidator = _React$useState2[1];\n\n    useEffect(function () {\n      if (validator) {\n        getData();\n        onChangeValidator(false);\n      }\n\n      var subscription = API.graphql(graphqlOperation(onCreateMessage)).subscribe({\n        next: function next(todoData) {\n          var array;\n          return _regeneratorRuntime.async(function next$(_context) {\n            while (1) {\n              switch (_context.prev = _context.next) {\n                case 0:\n                  array = Array.from(data_message).concat([todoData.value.data.onCreateMessage]);\n                  onChangeDataMessage(array);\n\n                case 2:\n                case \"end\":\n                  return _context.stop();\n              }\n            }\n          }, null, null, null, Promise);\n        }\n      });\n      scrollRef.current.scrollTo({\n        y: 10000,\n        Animation: true\n      });\n      return function () {\n        subscription.unsubscribe();\n      };\n    }, [data_message, _usernamelogin]);\n\n    function getData() {\n      return _regeneratorRuntime.async(function getData$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              API.graphql(graphqlOperation(listMessages, {\n                limit: 20\n              })).then(function (evt) {\n                return onChangeDataMessage(evt.data.listMessages.items);\n              });\n\n            case 1:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n\n    var scrollRef = useRef();\n    return React.createElement(SafeAreaView, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 7\n      }\n    }, React.createElement(View, {\n      style: {\n        width: '95%',\n        height: 500\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }\n    }, React.createElement(Text, {\n      style: styles.title,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }\n    }, \"Chat online\"), React.createElement(ScrollView, {\n      nestedScrollEnabled: true,\n      horizontal: false,\n      ref: scrollRef,\n      decelerationRate: \"normal\",\n      showsVerticalScrollIndicator: false,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }\n    }, data_message.map(function (todo, i) {\n      Auth.currentAuthenticatedUser().then(function (a) {\n        return onChangeUsernameLogin(a.username);\n      });\n\n      if (todo.username == _usernamelogin) {\n        return React.createElement(View, {\n          style: styles.container_message_principal,\n          key: todo.id,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 21\n          }\n        }, React.createElement(View, {\n          style: styles.card_message_principaluser,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 23\n          }\n        }, React.createElement(Text, {\n          style: styles.username,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 25\n          }\n        }, todo.username), React.createElement(Text, {\n          style: styles.message_text,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 25\n          }\n        }, todo.message)));\n      } else if (todo.username != _usernamelogin) {\n        return React.createElement(View, {\n          style: styles.container_message_second,\n          key: todo.id,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 21\n          }\n        }, React.createElement(View, {\n          style: styles.card_message_seconduser,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 23\n          }\n        }, React.createElement(Text, {\n          style: styles.username,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 25\n          }\n        }, todo.username), React.createElement(Text, {\n          style: styles.message_text,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 25\n          }\n        }, todo.message)));\n      }\n    }))));\n  } else {\n    return React.createElement(SafeAreaView, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 7\n      }\n    }, \"Hola\");\n  }\n}\nvar styles = StyleSheet.create({\n  title: {\n    fontSize: 30,\n    fontWeight: 'bold',\n    backgroundColor: '#ff9900',\n    borderRadius: 10,\n    textAlign: 'center'\n  },\n  card_message_principaluser: {\n    backgroundColor: '#ff9900',\n    borderRadius: 10,\n    padding: 10,\n    borderWidth: 2,\n    borderColor: '#ffb445'\n  },\n  message_text: {\n    fontSize: 18\n  },\n  username: {\n    fontSize: 13,\n    fontWeight: 'bold'\n  },\n  container_message_principal: {\n    backgroundColor: '#fff4e3',\n    alignItems: 'flex-end',\n    justifyContent: 'flex-end',\n    paddingTop: 10,\n    paddingEnd: 10\n  },\n  container_message_second: {\n    backgroundColor: '#fff4e3',\n    alignItems: 'flex-start',\n    justifyContent: 'flex-end',\n    paddingStart: 10,\n    paddingBottom: 10,\n    paddingTop: 10\n  },\n  card_message_seconduser: {\n    backgroundColor: '#ffcc82',\n    borderRadius: 10,\n    padding: 10\n  }\n});","map":{"version":3,"sources":["/home/isg-05/Escritorio/Genesis/genesis/components/Components_Chat.tsx"],"names":["React","useRef","Text","View","API","graphqlOperation","Auth","onCreateMessage","listMessages","useEffect","Components_Chat","path","usernamelogin","useState","data_message","onChangeDataMessage","currentAuthenticatedUser","then","a","username","onChangeUsernameLogin","console","log","validator","onChangeValidator","getData","subscription","graphql","subscribe","next","todoData","array","Array","from","concat","value","data","scrollRef","current","scrollTo","y","Animation","unsubscribe","limit","evt","items","width","height","styles","title","map","todo","i","container_message_principal","id","card_message_principaluser","message_text","message","container_message_second","card_message_seconduser","StyleSheet","create","fontSize","fontWeight","backgroundColor","borderRadius","textAlign","padding","borderWidth","borderColor","alignItems","justifyContent","paddingTop","paddingEnd","paddingStart","paddingBottom"],"mappings":"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","sourcesContent":["import React, { useRef } from 'react';\nimport { StyleSheet, ScrollView, SafeAreaView } from 'react-native';\n\nimport { Text, View } from './Themed';\n\n// This is the part for the suscription \nimport { API, graphqlOperation, Auth } from 'aws-amplify';\nimport { onCreateMessage } from '../src/graphql/subscriptions';\nimport { listMessages } from \"../src/graphql/queries\";\n\nimport { useEffect } from 'react';\n\n\nexport default function Components_Chat({ path }: { path: string }) {\n\n  // const [data_message, onChangeDataMessage] = React.useState([]) as any;\n\n  // const [usernamelogin, onChangeUsernameLogin] = React.useState(Auth.currentAuthenticatedUser().then((a) => a.username)) as any;\n\n  // console.log(\"username logueado\", usernamelogin);\n  // const [validator, onChangeValidator] = React.useState(true);\n\n\n  // useEffect(() => {\n  //   if (validator) {\n  //     getData();\n  //     onChangeValidator(false);\n  //   }\n\n  //   const subscription = API.graphql(\n  //     graphqlOperation(onCreateMessage)\n  //   ).subscribe({\n  //     next: async (todoData: any) => {\n  //       const array = Array.from(data_message).concat([todoData.value.data.onCreateMessage]);\n  //       onChangeDataMessage(array);\n  //     }\n  //   });\n  //   scrollRef.current.scrollTo({ y: 10000, Animation: true });\n  //   return (() => {\n  //     subscription.unsubscribe()\n  //   })\n  // }, [data_message, usernamelogin])\n\n  // async function getData() {\n  //   API.graphql(graphqlOperation(listMessages, { limit: 20 })).then((evt: any) => {\n  //     return (onChangeDataMessage(evt.data.listMessages.items));\n  //   });\n  // }\n\n  // const scrollRef = useRef();\n\n  if(usernamelogin == \"Emanuel\"){\n    const [data_message, onChangeDataMessage] = React.useState([]) as any;\n\n  const [usernamelogin, onChangeUsernameLogin] = React.useState(Auth.currentAuthenticatedUser().then((a) => a.username)) as any;\n\n  console.log(\"username logueado\", usernamelogin);\n  const [validator, onChangeValidator] = React.useState(true);\n\n\n  useEffect(() => {\n    if (validator) {\n      getData();\n      onChangeValidator(false);\n    }\n\n    const subscription = API.graphql(\n      graphqlOperation(onCreateMessage)\n    ).subscribe({\n      next: async (todoData: any) => {\n        const array = Array.from(data_message).concat([todoData.value.data.onCreateMessage]);\n        onChangeDataMessage(array);\n      }\n    });\n    scrollRef.current.scrollTo({ y: 10000, Animation: true });\n    return (() => {\n      subscription.unsubscribe()\n    })\n  }, [data_message, usernamelogin])\n\n  async function getData() {\n    API.graphql(graphqlOperation(listMessages, { limit: 20 })).then((evt: any) => {\n      return (onChangeDataMessage(evt.data.listMessages.items));\n    });\n  }\n\n  const scrollRef = useRef();\n  \n    return (\n      <SafeAreaView>\n        <View style={{ width: '95%', height: 500 }}>\n          <Text style={styles.title}>Chat online</Text>\n  \n          <ScrollView nestedScrollEnabled={true} horizontal={false}\n            // onLayout={(event) =>\n            //   console.log(event.nativeEvent.layout)\n            // }\n            ref={scrollRef}\n            decelerationRate=\"normal\"\n            showsVerticalScrollIndicator={false}\n          >\n            {\n              data_message.map((todo: any, i: any) => {\n                // console.log('usernamelogin', usernamelogin);\n                Auth.currentAuthenticatedUser().then((a) => onChangeUsernameLogin(a.username));\n                if (todo.username == usernamelogin) {\n                  return (\n                    <View style={styles.container_message_principal} key={todo.id}>\n                      <View style={styles.card_message_principaluser}>\n                        <Text style={styles.username}>{todo.username}</Text>\n                        <Text style={styles.message_text}>{todo.message}</Text>\n                      </View>\n                    </View>\n                  )\n                } else if (todo.username != usernamelogin) {\n                  return (\n                    <View style={styles.container_message_second} key={todo.id}>\n                      <View style={styles.card_message_seconduser}>\n                        <Text style={styles.username}>{todo.username}</Text>\n                        <Text style={styles.message_text}>{todo.message}</Text>\n                      </View>\n                    </View>\n                  )\n                }\n              })\n            }\n  \n          </ScrollView>\n  \n  \n        </View>\n      </SafeAreaView>\n    );\n  \n  }else{\n    return (\n      <SafeAreaView>\n        Hola\n      </SafeAreaView>\n    );\n  }\n\n  // return (\n  //   <SafeAreaView>\n  //     <View style={{ width: '95%', height: 500 }}>\n  //       <Text style={styles.title}>Chat online</Text>\n\n  //       <ScrollView nestedScrollEnabled={true} horizontal={false}\n  //         // onLayout={(event) =>\n  //         //   console.log(event.nativeEvent.layout)\n  //         // }\n  //         ref={scrollRef}\n  //         decelerationRate=\"normal\"\n  //         showsVerticalScrollIndicator={false}\n  //       >\n  //         {\n  //           data_message.map((todo: any, i: any) => {\n  //             // console.log('usernamelogin', usernamelogin);\n  //             Auth.currentAuthenticatedUser().then((a) => onChangeUsernameLogin(a.username));\n  //             if (todo.username == usernamelogin) {\n  //               return (\n  //                 <View style={styles.container_message_principal} key={todo.id}>\n  //                   <View style={styles.card_message_principaluser}>\n  //                     <Text style={styles.username}>{todo.username}</Text>\n  //                     <Text style={styles.message_text}>{todo.message}</Text>\n  //                   </View>\n  //                 </View>\n  //               )\n  //             } else if (todo.username != usernamelogin) {\n  //               return (\n  //                 <View style={styles.container_message_second} key={todo.id}>\n  //                   <View style={styles.card_message_seconduser}>\n  //                     <Text style={styles.username}>{todo.username}</Text>\n  //                     <Text style={styles.message_text}>{todo.message}</Text>\n  //                   </View>\n  //                 </View>\n  //               )\n  //             }\n  //           })\n  //         }\n\n  //       </ScrollView>\n\n\n  //     </View>\n  //   </SafeAreaView>\n  // );\n\n\n}\n\n\nconst styles = StyleSheet.create({\n  title: {\n    fontSize: 30,\n    fontWeight: 'bold',\n    backgroundColor: '#ff9900',\n    borderRadius: 10,\n    textAlign: 'center',\n  },\n  card_message_principaluser: {\n    backgroundColor: '#ff9900',\n    borderRadius: 10,\n    padding: 10,\n    borderWidth: 2,\n    borderColor: '#ffb445',\n  },\n  message_text: {\n    fontSize: 18,\n  },\n  username: {\n    fontSize: 13,\n    fontWeight: 'bold',\n  },\n  container_message_principal: {\n    backgroundColor: '#fff4e3',\n    alignItems: 'flex-end',\n    justifyContent: 'flex-end',\n    paddingTop: 10,\n    paddingEnd: 10,\n  },\n  container_message_second: {\n    backgroundColor: '#fff4e3',\n    alignItems: 'flex-start',\n    justifyContent: 'flex-end',\n    paddingStart: 10,\n    paddingBottom: 10,\n    paddingTop: 10,\n  },\n  card_message_seconduser: {\n    backgroundColor: '#ffcc82',\n    borderRadius: 10,\n    padding: 10,\n  },\n});\n"]},"metadata":{},"sourceType":"module"}